#!/bin/bash
#
# rc file for automount using a Sun-style "master map".
#
# chkconfig: 345 28 72
# processname: /usr/sbin/automount
# config: /etc/auto.master
# description: Automounts filesystems on demand

#
# Location of the automount daemon and the init directory
#
DAEMON=/usr/sbin/automount
prog=$(basename ${DAEMON})
MODULE="autofs4"
initdir=/etc/rc.d
confdir=/etc/autofs
lockfile=/var/lock/subsys/autofs

test -e ${DAEMON} || exit 0

PATH=/sbin:/usr/sbin:/bin:/usr/bin
export PATH

#
# load customized configuation settings
#
if [ -r ${confdir}/autofs.conf ]; then
  . ${confdir}/autofs.conf
fi

RETVAL=0
PID=$(/sbin/pidof -o %PPID ${DAEMON})

function start() {
  # Make sure autofs4 module is loaded
  if ! grep -q autofs /proc/filesystems
  then
    echo -n "Loading ${MODULE}: "
    # Try load the autofs4 module fail if we can't
    /sbin/modprobe ${MODULE} >/dev/null 2>&1
    RETVAL=$?
    if [ ${RETVAL} -eq 0 ] ; then
      echo -e "\t\t\t\t\t\t[  OK  ]\r"
    else
      echo -e "\t\t\t\t\t\t[FAILED]\r"
      return ${RETVAL}
    fi
  elif ([ -f /proc/modules ] && /sbin/lsmod) | grep -q autofs[^4]
  then
    RETVAL=1
    if [ ${RETVAL} -eq 0 ] ; then
      echo -e "\t\t\t\t\t\t[  OK  ]\r"
    else
      echo -e "\t\t\t\t\t\t[FAILED]\r"
      return ${RETVAL}
    fi
  fi
  echo -n "Starting ${prog}: "
  if [ -z "${PID}" ] ;then 
    ${DAEMON} ${OPTIONS}
    RETVAL=$?
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] && touch ${lockfile} ; then
    echo -e "\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

function stop() {
  echo -n "Stopping ${prog}: "
  count=0
  if [ -n "${PID}" ] ;then
    while [ -n "$(/sbin/pidof ${DAEMON})" -a ${count} -lt 15 ] ; do
      killall ${prog} -TERM >& /dev/null
      RETVAL=$?
      [ ${RETVAL} = 0 -a -z "$(/sbin/pidof ${DAEMON})" ] || sleep 3
      count=$(expr $count + 1)
    done
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] && rm -f ${lockfile} ; then
    echo -e "\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

function restart() {
  stop
  start
}

function reload() {
  if [ ! -f ${lockfile}]; then
    echo "${prog} not running"
    RETVAL=1
    return ${RETVAL}
  fi
  if [ -z "${PID}" ]; then
    echo "${prog} not running"
    RETVAL=1
  else
    kill -HUP ${PID} 2> /dev/null
    echo "Reloading maps"
    RETVAL=0
  fi
  return ${RETVAL}
}

case "$1" in
  start|stop|restart|reload)
    $1
    ;;
  status)
    if [ -f ${lockfile} ]; then
      echo "${prog} is running in pid ${PID}."
    else
      echo "${prog} is not running."
    fi
    ;;
  condrestart)
    if [ -f ! ${lockfile} ]; then
      restart
    fi
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload|condrestart}"
    exit 1
    ;;
esac
