#!/bin/bash
#-- broffice for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.br>
# Suggested usage: $ broffice.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.broffice.org

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

NAME=brofficeorg
PNAME=broffice.org
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-3.0.0rc1_20080904}
SVER="$(echo ${VERSION} | cut -d . -f1)"
SVER2="$(echo ${VERSION} | cut -d . -f1-2)"
ARCH=i586
BUILD=${BUILD:-2}
NJOBS=${NJOBS:-2}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

# If you want to disable java support by removing executable permissions
# form OOo's java loader (this will not affect other apps), set this
# variable to "YES"   Default is "NO"
# According to Fred Emmott, this is *highly* desirable on 64 bit systems
SB_JAVA=${SB_JAVA:-NO}

# Dictionaries to install (en es pt)
SB_DICTLANGS=${SB_DICTLANGS:-en es pt}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${NAME}-${VERSION}
SRCARCHIVE=BrOo_${VERSION}_LinuxIntel_install_pt-BR.tar.gz

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
OO_MIRROR=${OO_MIRROR:-http://prdownloads.sourceforge.net}
DL_URL="${OO_MIRROR}/stable/${VERSION}/${SRCARCHIVE}"
DL_URL2="${OO_MIRROR}/extended/${VERSION}/${SRCARCHIVE}"

# if source is not present, download in source rootdir if possible, or in /tmp
if ! test -r ${SRCARCHIVE}; then
  test -r ${CWD}/${SRCARCHIVE} ||\
    wget ${DL_OPTS} ${DL_URL} || wget ${DL_OPTS} ${DL_URL2} || exit 1
fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

cd ${TMP}
rm -rf ${SRCDIR}
mkdir ${SRCDIR}
cd ${SRCDIR} || exit 1
if $(file -L ${CWD}/${SRCARCHIVE} | grep -q ": bzip2"); then
  tar -xjvf ${CWD}/${SRCARCHIVE} || exit 1
elif $(file -L ${CWD}/${SRCARCHIVE} | grep -q ": gzip"); then
  tar -xzvf ${CWD}/${SRCARCHIVE} || exit 1
fi

( #cd pt-BR/RPMS
  cd */RPMS
  mv desktop-integration/broffice.org*-redhat-menus-*.noarch.rpm . || exit 1
  rm -rf desktop-integration
  rm -f *onlineupdate*.rpm
  for rpm in *.rpm ; do
    rpm2cpio ${rpm} | ( cd ${PKG} && cpio -imdv --no-absolute-filenames )
  done
) || exit 1

find ${PKG} -type d | xargs chmod 0755 2> /dev/null
chmod -R u+rw,go+r-w,a-s ${PKG}/

mkdir -p ${PKG}/usr/lib
mv ${PKG}/opt/${PNAME}${SVER} ${PKG}/opt/openoffice.org ${PKG}/usr/lib/ || exit 1
rmdir ${PKG}/opt

# Better use external
rm -f ${PKG}/usr/lib/openoffice.org/basis*/share/fonts/truetype/{DejaVu,Liberation}*.ttf

find ${PKG}/usr/lib/${PNAME}${SVER}/program \
     ${PKG}/usr/lib/openoffice.org/basis*/program/ |\
     xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs chmod 755 2> /dev/null

for dictlang in ${SB_DICTLANGS} ;do
  ${PKG}/usr/lib/broffice.org3/program/unopkg add --shared \
    ${PKG}/usr/lib/broffice.org3/share/extension/install/dict-${dictlang}.oxt \
    '-env:UNO_JAVA_JFW_INSTALL_DATA=$OOO_BASE_DIR/share/config/javasettingsunopkginstall.xml' \
    '-env:JFW_PLUGIN_DO_NOT_CHECK_ACCESSIBILITY=1' || exit 1
done

rm -f ${PKG}/usr/bin/* || exit 1
mkdir -p ${PKG}/usr/bin
( cd ${PKG}/usr/bin
for file in base calc draw impress math writer ;do
cat > bro${file} <<EOF
#!/bin/sh
exec /usr/lib/${PNAME}${SVER}/program/soffice -${file} "\$@"
EOF
done

cat > broviewdoc <<EOF
#!/bin/sh
exec /usr/lib/${PNAME}${SVER}/program/soffice -view "\$@"
EOF

cat > unopkg <<EOF
#!/bin/sh
exec /usr/lib/${PNAME}${SVER}/program/unopkg "\$@"
EOF

cat > ${PNAME}${SVER}-printeradmin <<EOF
#!/bin/sh
exec /usr/lib/${PNAME}${SVER}/program/spadmin "\$@"
EOF

cat > ${PNAME}${SVER} <<EOF
#!/bin/sh
exec /usr/lib/${PNAME}${SVER}/program/soffice "\$@"
EOF

chmod 0755 *

for file in bro{base,calc,draw,impress,math,viewdoc,writer} ;do
  ln -s ${file} ${file/bro/oo} || exit 1
done

ln -s ${PNAME}${SVER} ${PNAME}
ln -s ${PNAME}${SVER} ${PNAME}-${SVER2} 
ln -s ${PNAME}${SVER} ooffice
ln -s ${PNAME}${SVER} openoffice.org.${SVER}
ln -s ${PNAME}${SVER}-printeradmin broprinteradmin
ln -s ${PNAME}${SVER}-printeradmin ${PNAME}-${SVER2}-printeradmin
ln -s ${PNAME}${SVER}-printeradmin openoffice.org${SVER}-printeradmin
ln -s /usr/lib/${PNAME}${SVER}/program/soffice soffice
) || exit 1

mkdir -p ${PKG}/etc/profile.d
for f in ${NAME}.{csh,sh} ;do
  install -m0755 ${CWD}/profile.d/${f} \
                 ${PKG}/etc/profile.d/${f}.new || exit 1
done

# Fix desktop files
sed -i -e "/^Name.*=/s|\ ${SVER2}||g;
           /^Icon=/s|${NAME}${SVER}|${NAME}|g" \
           ${PKG}/usr/lib/${PNAME}${SVER}/share/xdg/*.desktop || exit 1

for file in ${PKG}/usr/lib/${PNAME}${SVER}/share/xdg/*.desktop ;do
  echo "StartupNotify=true" >> ${file}
  echo "TryExec=bro$(basename ${file} .desktop)" >> ${file}
done

sed -i -e "/name=/s|\ ${SVER2}||g" \
          ${PKG}/usr/share/application-registry/*.applications || exit 1

rm -f ${PKG}/usr/share/applications/* || exit 1
rm -rf ${PKG}/usr/share/applnk* || exit 1
rm -rf ${PKG}/usr/share/mimelnk || exit 1

SB_DFI(){
desktop-file-install --delete-original \
  --vendor="${NAME}" --mode 0644 \
  --dir ${PKG}/usr/share/applications  \
  --remove-category="Application" \
  --remove-category="X-Red-Hat-Base" \
  --remove-category="X-SuSE-Core-Office" $@
}

SB_DFI \
  --remove-category="X-MandrivaLinux-MoreApplications-Databases" \
  --add-mime-type="text/x-csv" \
  ${PKG}/usr/lib/${PNAME}${SVER}/share/xdg/base.desktop || exit 1

SB_DFI \
  --remove-category="X-MandrivaLinux-Office-Spreadsheets" \
  ${PKG}/usr/lib/${PNAME}${SVER}/share/xdg/calc.desktop || exit 1

SB_DFI \
  --remove-category="-MandrivaLinux-Office-Drawing" \
  ${PKG}/usr/lib/${PNAME}${SVER}/share/xdg/draw.desktop || exit 1

SB_DFI \
  --remove-category="X-MandrivaLinux-Office-Presentations" \
  ${PKG}/usr/lib/${PNAME}${SVER}/share/xdg/impress.desktop || exit 1

SB_DFI \
  --remove-category="X-MandrivaLinux-Office-Other" \
  ${PKG}/usr/lib/${PNAME}${SVER}/share/xdg/math.desktop || exit 1

SB_DFI \
  ${PKG}/usr/lib/${PNAME}${SVER}/share/xdg/printeradmin.desktop || exit 1

SB_DFI \
  --remove-category="X-MandrivaLinux-Office-Wordprocessors" \
  --add-mime-type="text/rtf" \
  ${PKG}/usr/lib/${PNAME}${SVER}/share/xdg/writer.desktop || exit 1

# Fix icons.
rm -rf ${PKG}/usr/share/icons/{gnome,locolor} || exit 1

for res in 16 32 48 ;do
  dir=${PKG}/usr/share/icons/hicolor/${res}x${res}
  for idir in apps mimetypes ;do
    ( cd ${dir}/${idir} || exit 1
      chmod 0644 *.png
      rm -f ${NAME}${SVER2//.}-*.png
      for icon in ${NAME}${SVER}-*.png ;do
        ln -s ${icon} $( echo ${icon} | sed "s|${NAME}${SVER}|${NAME}-${SVER2//.}|g" )
        ln -s ${icon} $( echo ${icon} | sed "s|${NAME}${SVER}|${NAME}|g" )
        ln -s ${icon} ${icon/broffice/openoffice}
        ln -s ${icon} $( echo ${icon} | sed "s|${NAME}${SVER}|openoffice-${SVER2//.}|g" )
        ln -s ${icon} $( echo ${icon} | sed "s|${NAME}${SVER}|openoffice|g" )
      done
    ) || exit 1
  done
    ( cd ${dir}/mimetypes || exit 1
      for icon in gnome-mime-application-vnd.*.png ;do
        ln -sf $( echo $(readlink ${icon}) | sed "s|${SVER2//.}|${SVER}|g") ${icon} || exit 1
      done
    ) || exit 1
done

# Disable Java support if desired (see above)
if [ "${SB_JAVA}" = "YES" ]; then
  chmod -x ${PKG}/usr/lib/openoffice.org/ure/bin/javaldx
fi

# Add a documentation directory:
mkdir -p ${DOCDIR}
cat ${CWD}/ChangeLog.SB > ${DOCDIR}/ChangeLog.SB
zcat ${CWD}/README.xinc.gz > ${DOCDIR}/README.xinc
mv ${PKG}/usr/lib/${PNAME}${SVER}/{README,LICENSE,*.html} ${DOCDIR}/
ln -s /usr/lib/${PNAME}${SVER}/licenses/LICENSE_pt-BR{,.html} \
      ${DOCDIR}/
ln -s /usr/lib/${PNAME}${SVER}/readmes/README_pt-BR{,.html} \
      ${DOCDIR}/
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
  mv ${PKG}/usr/share/man ${PKG}/usr/man
  rmdir ${PKG}/usr/share
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

cat > ${PKG}/install/doinst.sh <<EOF
#!/bin/sh
# Figure out our root directory
ROOTDIR=\$(pwd)
unset CHROOT
if test "\${ROOTDIR}" != "/"; then
  CHROOT="chroot \${ROOTDIR} "
  ROOTDIR="\${ROOTDIR}/"
fi
if [ -x usr/bin/update-desktop-database ]; then
  \${CHROOT} /usr/bin/update-desktop-database 1> /dev/null 2> /dev/null
fi
if [ -x usr/bin/update-mime-database ]; then
  \${CHROOT} /usr/bin/update-mime-database /usr/share/mime &> /dev/null
fi
if [ -x usr/bin/gtk-update-icon-cache ]; then
  \${CHROOT} /usr/bin/gtk-update-icon-cache -q usr/share/icons/hicolor > /dev/null 2>&1
fi

config() {
  NEW="\$1"
  OLD="\$(dirname \$NEW)/\$(basename \$NEW .new)"
  # If there's no config file by that name, mv it over:
  if [ ! -r \$OLD ]; then
    mv \$NEW \$OLD
  elif [ "\$(cat \$OLD | md5sum)" = "\$(cat \$NEW | md5sum)" ]; then
    # toss the redundant copy
    rm \$NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}
## List of conf files to check.  The conf files in your package should end in .new
EOF

( cd ${PKG}
  find etc/ -name *.new -exec echo config {} ';' | sort >> ${PKG}/install/doinst.sh
  echo >> ${PKG}/install/doinst.sh
)

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}/profile.d
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
                 ${CWD}/README.xinc.gz ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
                 ${SBDIR}/${NAME}.SlackBuild
  install -m0644 ${CWD}/profile.d/${NAME}.{csh,sh} \
                 ${SBDIR}/profile.d/
  sed -i "/^VERSION=/s/:-.*}/:-$VERSION}/
          /^BUILD=/s/:-.*}/:-$BUILD}/
          /^  ARCH=/s/:-.*}/:-$ARCH}/
          " ${SBDIR}/${NAME}.SlackBuild
fi

# Build package:
set +o xtrace        # no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.tgz "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
