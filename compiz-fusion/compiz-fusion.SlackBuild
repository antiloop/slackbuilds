#!/bin/sh

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

OLDVER=0.5.2
ALLVER=0.6.0
ALLARCH=i686
ALLBUILD=1
SUBPKG=${ALLVER/-/.}-${ALLARCH}-${ALLBUILD}${PACKAGER_ID}

sed -i -e "/compiz/s|${OLDVER}|${ALLVER}|g" */slack-required
sed -i -e "/emerald/s|${OLDVER}|${ALLVER}|g" */slack-required
sed -i -e "s|${OLDVER}|${ALLVER}|g" */slack-required
sed -i -e "/VERSION=/s|${OLDVER}|${ALLVER}|g" */*.SlackBuild

if [ "$1" != "--norem" ] ; then
   echo "Insert root password to Remove old packages:"
   su -c 'removepkg compiz-bcop compiz libcompizconfig ccsm compizconfig-python  compizconfig-backend-gconf compizconfig-backend-kconfig fusion-icon compiz-fusion-plugins-main compiz-fusion-plugins-extra compiz-fusion-plugins-unsupported emerald emerald-themes'
fi

echo
echo "If you don't want to continue, break now (Ctrl+C)."
read JUNK
# 
for pack in compiz-bcop compiz libcompizconfig ccsm compizconfig-{python,backend-{gconf,kconfig}}  compiz-fusion-plugins-{main,extra,unsupported} emerald{,-themes}
do
if [ ${pack} == "compiz-bcop" ] || [ ${pack} == "ccsm" ] || [ ${pack} == "fusion-icon" ] || [ ${pack} == "emerald-themes" ] ; then
   BPKG="${pack}-${ALLVER/-/.}-noarch-${ALLBUILD}${PACKAGER_ID}.tgz"
else
   BPKG="${pack}-${ALLVER/-/.}-${ALLARCH}-${ALLBUILD}${PACKAGER_ID}.tgz"
fi
if ! [ -f ./${BPKG} ] ; then
pushd ${pack}

DATE=$(LC_ALL=C date)
if [ -f ./ChangeLog.SB ] ;then
mv ./ChangeLog.SB ./ChangeLog.SB.old
cat > ./ChangeLog.SB <<EOF
${DATE}
${BPKG}:
Updated to ${ALLVER}.
+--------------------------+
EOF
cat ./ChangeLog.SB.old >> ./ChangeLog.SB
rm -f ./ChangeLog.SB.old
  else
cat > ./ChangeLog.SB <<EOF
${DATE}
${BPKG}:
First SB.
+--------------------------+
EOF
  fi

   ./${pack}.SlackBuild --cleanup 2>&1 | tee ../${pack}-build.log || exit 1
   mv ${BPKG} ../ || exit 1
   popd

   if [ ${pack} == "compiz-bcop" ] || [ ${pack} == "compiz" ] || [ ${pack} == "libcompizconfig" ] || [ ${pack} == "compiz-fusion-plugins-main" ] || [ ${pack} == "emerald" ] ;then
      echo "${BPKG} needs to be installed to build other packages:"
      echo "Insert root password to install it:"
      su -c "upgradepkg --install-new ${BPKG}"
   fi
else
   echo "Package ${BPKG} exists."
fi
sleep 2
done
echo "All finished."
