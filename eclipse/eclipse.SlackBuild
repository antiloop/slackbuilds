#!/bin/sh
#-- eclipse for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.brg>
# Suggested usage: $ eclipse.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.eclipse.org/

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

CWD=$(pwd)
if [ "${TMP}" = "" ]; then
  TMP=/tmp
fi

PNAME=eclipse
NAME=${PNAME}-SDK
PKG=${TMP}/package-${NAME}

VERSION=${VERSION:-3.3}
ARCH=${ARCH:-i586}
BUILD=${BUILD:-2}
NJOBS=${NJOBS:-2}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${NAME}-${VERSION}
SRCARCHIVE=${SRCDIR}-linux-gtk.tar.gz

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL="http://download.eclipse.org/eclipse/downloads/drops/R-3.3-200706251500/${SRCARCHIVE}"
#DL_URL="ftp://ftp.pucpr.br/eclipse/eclipse/downloads/drops/R-3.3-200706251500/${SRCARCHIVE}"

# if source is not present, download in source rootdir if possible, or in /tmp
if ! test -r ${SRCARCHIVE}; then
  test -r ${CWD}/${SRCARCHIVE} || wget  ${DL_OPTS} ${DL_URL} || exit 1
fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}/usr/lib

( cd $PKG/usr/lib

  tar -xzvf ${CWD}/${SRCARCHIVE} || exit 1

  cd ${PNAME} || exit 1
  echo "Initializing..."
  ./${PNAME} -initialize || exit 1

) || exit 1

# Wrapper
mkdir -p ${PKG}/usr/bin
cat > ${PKG}/usr/bin/${PNAME} <<EOF
#!/bin/sh
exec /usr/lib/${PNAME}/${PNAME} "\$@"
EOF
chmod 0755 ${PKG}/usr/bin/${PNAME} || exit 1

mkdir -p ${PKG}/usr/share/applications
cat > ${PKG}/usr/share/applications/${PNAME}.desktop <<EOF
[Desktop Entry]
Encoding=UTF-8
Name=Eclipse
Comment=Eclipse Integrated Development Environment
Exec=${PNAME}
Icon=${PNAME}.png
Terminal=false
Type=Application
Categories=IDE;Development;Java;
EOF

for size in 16x16 32x32 48x48 ;do
  dir=${PKG}/usr/share/icons/hicolor/${size}/apps
  mkdir -p ${dir}
  convert ${PKG}/usr/lib/${PNAME}/icon.xpm -filter Lanczos -depth 8 \
          -resize ${size} ${dir}/${PNAME}.png
done

# Add a documentation directory:
mkdir -p ${DOCDIR}
for doc in IJG_README about_cairo.html {lgpl-v21,mpl-v11,pixman-licenses}.txt ; do
    ln -s /usr/lib/${PNAME}/about_files/${doc} ${DOCDIR}/${doc}
done
for doc in about.html epl-v10.html notice.html ; do
    ln -s /usr/lib/${PNAME}/${doc} ${DOCDIR}/${doc}
done
ln -s /usr/lib/${PNAME}/readme/readme_eclipse.html ${DOCDIR}/readme_eclipse.html
cp -a \
  AUTHORS COPYING ChangeLog README NEWS THANKS TODO ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
    mv ${PKG}/usr/share/man ${PKG}/usr/man
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm ${eachpage}
        done
        gzip -9 *.?
      )
    done
  )
fi

# Compress info pages, if any:
if [ -d ${PKG}/usr/info ]; then
  ( cd ${PKG}/usr/info
      rm -f dir
      gzip -9 *
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

# Replicate slackbuild and patches
mkdir -p ${SBDIR}
install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
               ${SBDIR}/
install -m0755 ${CWD}/${NAME}.SlackBuild \
               ${SBDIR}/${NAME}.SlackBuild
sed -i "/^VERSION=/s/:-.*}/:-$VERSION}/
        /^BUILD=/s/:-.*}/:-$BUILD}/
        /^ARCH=/s/:-.*}/:-$ARCH}/
        " ${SBDIR}/${NAME}.SlackBuild

# Build package:
set +o xtrace			# no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.tgz "

if test $UID = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${PKG} ]; then
    rm -rf ${PKG}
    echo "${PKG} cleanup completed"
  fi
fi
