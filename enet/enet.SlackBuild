#!/bin/sh
TMP=/tmp
CWD=`pwd`
PKG=/tmp/package-enet

NAME=enet
VERSION=1.0
ARCH=${ARCH:-i686}
BUILD=${BUILD:-1xinc}

if [ "$ARCH" = "i386" ]; then
  SLKCFLAGS="-O2 -march=i386 -mcpu=i686"
elif [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O3 -march=athlon64 -mtune=athlon64 -msse3"
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2"
fi

rm -rf $PKG
mkdir -p $PKG
cd $TMP
rm -rf $NAME
tar -xzvf $CWD/$NAME-$VERSION.tar.gz
cd $NAME-$VERSION || exit 1
chown -R root:root .
find . -perm 777 -exec chmod 755 {} \;
find . -perm 666 -exec chmod 644 {} \;
find . -perm 664 -exec chmod 644 {} \;
CFLAGS="$SLKCFLAGS" ; export CFLAGS
CXXFLAGS="$SLKCFLAGS" ; export CXXFLAGS
./configure \
            --prefix=/usr \
            --build=$ARCH-slackware-linux

make || exit 1
make install DESTDIR=$PKG || exit 1
doxygen || exit 1

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

mkdir -p $PKG/usr/doc/$NAME-$VERSION
cp -a \
  COPYING LICENSE README *.txt docs/html \
  $PKG/usr/doc/$NAME-$VERSION/
find $PKG/usr/doc/$NAME-$VERSION/ -type f | xargs chmod 644

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Replicate slackbuild and patches
mkdir -p $PKG/usr/src/slackbuilds/$NAME-$VERSION
install -m644 $CWD/slack-desc \
              $PKG/usr/src/slackbuilds/$NAME-$VERSION/
install -m755 $CWD/$NAME.SlackBuild \
              $PKG/usr/src/slackbuilds/$NAME-$VERSION/$NAME.SlackBuild
chown root.root $PKG/usr/src/slackbuilds/$NAME-$VERSION/*

cd $PKG
makepkg -l y -c n $CWD/$NAME-$VERSION-$ARCH-$BUILD.tgz

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/$NAME-$VERSION
  rm -rf $PKG
fi
