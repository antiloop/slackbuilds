#!/bin/sh
#-- fedora-logos for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.br>
# Suggested usage: $ fedora-logos.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

NAME=fedora-logos
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-9.0.1}
ARCH=noarch
BUILD=${BUILD:-1}
NJOBS=${NJOBS:-2}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${NAME}-${VERSION}
SRCARCHIVE=${SRCDIR}.tar.bz2

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
#DL_URL="http://dl.sf.net/sourceforge/${NAME}/${SRCARCHIVE}"
#DL_URL="http://prdownloads.sourceforge.net/${NAME}/${SRCARCHIVE}"
#DL_URL="http://download.sf.net/${NAME}/${SRCARCHIVE}"

# if source is not present, download in source rootdir if possible, or in /tmp
if ! test -r ${SRCARCHIVE}; then
  #test -r ${CWD}/${SRCARCHIVE} || wget ${DL_OPTS} ${DL_URL} || exit 1
  test -r ${CWD}/${SRCARCHIVE} || echo "Download ${SRCARCHIVE} in a Fedora mirror." && exit 1
fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

cd ${TMP}
rm -rf ${SRCDIR}
if $(file -L ${CWD}/${SRCARCHIVE} | grep -q ": bzip2"); then
  tar -xjvf ${CWD}/${SRCARCHIVE} || exit 1
elif $(file -L ${CWD}/${SRCARCHIVE} | grep -q ": gzip"); then
  tar -xzvf ${CWD}/${SRCARCHIVE} || exit 1
fi
cd ${SRCDIR} || exit 1
tar -xjvf ${CWD}/${NAME}-legacy.tar.bz2 || exit 1

chmod -R u+w,go+r-w,a-s .

# zcat ${CWD}/${NAME}.patch.gz | patch -p0 -E --backup --verbose || exit 1

mkdir -p ${PKG}/usr/share/pixmaps/redhat
for i in redhat-pixmaps/*; do
  install -m 644 ${i} ${PKG}/usr/share/pixmaps/redhat/ || exit 1
done

( cd ${PKG}/usr/share/pixmaps/redhat; \
  for i in *-mini.xpm; do \
    linkfile=$( echo ${i} | sed -e "s/\(.*\)-mini/mini-\1/" ) ; \
    ln -s ${i} ${linkfile} ; \
  done
)

mkdir -p ${PKG}/boot/grub
install -m 644 bootloader/grub-splash.xpm.gz \
              ${PKG}/boot/grub/splashfc.xpm.gz || exit 1

# mkdir -p ${PKG}/usr/share/firstboot/pixmaps
# for i in firstboot/* ; do
#   install -m 644 ${i} ${PKG}/usr/share/firstboot/pixmaps/ || exit 1
# done

# mkdir -p ${PKG}/usr/share/rhgb
# for i in rhgb/* ; do
#   install -m 644 ${i} ${PKG}/usr/share/rhgb/ || exit 1
# done

mkdir -p ${PKG}/usr/share/pixmaps/splash
for i in gnome-splash/* ; do
  install -m 644 ${i} ${PKG}/usr/share/pixmaps/splash/ || exit 1
done

( cd ${PKG}/usr/share/pixmaps/splash/
  for i in * ; do
    mv ${i} fc-${i} || exit 1
  done
)

mkdir -p ${PKG}/usr/share/gnome-screensaver
for i in gnome-screensaver/* ; do
  install -m 644 ${i} ${PKG}/usr/share/gnome-screensaver/ || exit 1
done

mkdir -p ${PKG}/usr/share/applications/screensavers
for i in applications/screensavers/* ; do
  install -m 644 ${i} ${PKG}/usr/share/applications/screensavers/ || exit 1
done

mkdir -p ${PKG}/usr/share/backgrounds/images
for i in backgrounds/images/* ; do
  install -m 644 ${i} ${PKG}/usr/share/backgrounds/images/fedora-flyinghigh$(basename ${i/default/}) || exit 1
done

for i in backgrounds/legacy/* ; do
  install -m 644 ${i} ${PKG}/usr/share/backgrounds/images/ || exit 1
done

mkdir -p ${PKG}/usr/share/wallpapers
for i in ${PKG}/usr/share/backgrounds/images/* ;do
  ln -s ../backgrounds/images/$(basename ${i}) \
        ${PKG}/usr/share/wallpapers/$(basename ${i}) || exit 1
done

mkdir -p ${PKG}/usr/share/gnome-background-properties
sed -i -e '/backgrounds/s|default|images/fedora-flyinghigh|g' \
           backgrounds/desktop-backgrounds-fedora.xml
for i in backgrounds/*.xml ; do
  install -m 644 ${i} ${PKG}/usr/share/gnome-background-properties/ || exit 1
done

mkdir -p ${PKG}/usr/share/apps/ksplash/Themes/BlueCurve \
         ${PKG}/usr/share/apps/ksplash/Themes/Echo \
         ${PKG}/usr/share/apps/ksplash/Themes/FedoraInfinity

for i in kde-splash/BlueCurve/* ; do
  install -m 644 ${i} ${PKG}/usr/share/apps/ksplash/Themes/BlueCurve/ || exit 1
done

for i in kde-splash/Echo/* ; do
  install -m 644 ${i} ${PKG}/usr/share/apps/ksplash/Themes/Echo/ || exit 1
done

for i in kde-splash/FedoraInfinity/* ; do
  install -m 644 ${i} ${PKG}/usr/share/apps/ksplash/Themes/FedoraInfinity/ || exit 1
done

mkdir -p ${PKG}/usr/share/kde4/apps/ksplash/Themes/FedoraWaves/1600x1200
for i in kde-splash/FedoraWaves/{Theme.rc,Preview.png} ; do
  install -p -m 644 ${i} ${PKG}/usr/share/kde4/apps/ksplash/Themes/FedoraWaves/ || exit 1
done
for i in kde-splash/FedoraWaves/1600x1200/* ; do
  install -p -m 644 ${i} ${PKG}/usr/share/kde4/apps/ksplash/Themes/FedoraWaves/1600x1200/ || exit 1
done

mkdir -p ${PKG}/usr/share/pixmaps
for i in pixmaps/* ; do
  install -m 644 ${i} ${PKG}/usr/share/pixmaps/ || exit 1
done

for size in 16x16 24x24 32x32 36x36 48x48 96x96 ; do
  mkdir -p ${PKG}/usr/share/icons/hicolor/${size}/apps
  for i in icons/hicolor/${size}/apps/* ; do
    install -m 644 ${i} ${PKG}/usr/share/icons/hicolor/${size}/apps
  done
done

mkdir -p ${PKG}/usr/share/gdm/themes/FedoraBubbles
for i in gdm/FedoraBubbles/* ; do
  install -m 644 ${i} ${PKG}/usr/share/gdm/themes/FedoraBubbles/ || exit 1
done

mkdir -p ${PKG}/usr/share/gdm/themes/FedoraDNA
for i in gdm/FedoraDNA/* ; do
  install -m 644 ${i} ${PKG}/usr/share/gdm/themes/FedoraDNA/ || exit 1
done

mkdir -p ${PKG}/usr/share/gdm/themes/FedoraFlyingHigh
for i in gdm/FedoraFlyingHigh/* ; do
  install -m 644 $i ${i} ${PKG}/usr/share/gdm/themes/FedoraFlyingHigh/
done

# kdmtheme
mkdir -p ${PKG}/usr/share/apps/kdm/themes/Bluecurve
( cd ${PKG}/usr/share/apps/kdm/themes/Bluecurve
  ln -s ../../../../gdm/themes/Bluecurve/rh_logo-header.png .
  ln -s ../../../../gdm/themes/Bluecurve/screenshot.png .
) || exit 1

mkdir -p ${PKG}/usr/share/apps/kdm/themes/FedoraDNA
( cd ${PKG}/usr/share/apps/kdm/themes/FedoraDNA
  for i in gdm/FedoraDNA/* ; do
    ln -s ../../../../gdm/themes/FedoraDNA/$(basename ${i}) .
  done
) || exit 1

ln -s ../../firstboot/pixmaps/shadowman-round-48.png \
 ${PKG}/usr/share/pixmaps/redhat/ || exit 1

# (cd anaconda; make DESTDIR=${PKG} install)

for i in 16 24 32 36 48 96; do
  mkdir -p ${PKG}/usr/share/icons/Fedora/${i}x${i}/places
  cp ${PKG}/usr/share/icons/hicolor/${i}x${i}/apps/fedora-logo-icon.png \
     ${PKG}/usr/share/icons/Fedora/${i}x${i}/places/start-here.png || exit 1
done

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  COPYING ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
  mv ${PKG}/usr/share/man ${PKG}/usr/man
  rmdir ${PKG}/usr/share
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm -f ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

# Compress info pages, if any:
if [ -d ${PKG}/usr/info ]; then
  ( cd ${PKG}/usr/info
      rm -f dir
      gzip -9 *
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}/patches
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
                 ${CWD}/apply-patches.sh ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
                 ${SBDIR}/${NAME}.SlackBuild
  install -m0644 ${CWD}/patches/*.gz \
                 ${SBDIR}/patches/
  sed -i "/^VERSION=/s/:-.*}/:-$VERSION}/
          /^BUILD=/s/:-.*}/:-$BUILD}/
          /^  ARCH=/s/:-.*}/:-$ARCH}/
          " ${SBDIR}/${NAME}.SlackBuild
fi

# Build package:
set +o xtrace        # no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.tgz "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
