#!/bin/sh
#-- mathml-fonts for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.br>
# Suggested usage: $ mathml-fonts.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.mozilla.org/projects/mathml/fonts/

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

CWD=$(pwd)
if [ "${TMP}" = "" ]; then
  TMP=/tmp
fi

PNAME=mathml
NAME=mathml-fonts
PKG=${TMP}/package-${NAME}

VERSION=${VERSION:-1.0}
BFVER=${BFVER:-1.1}
MFVER=${MFVER:-6.0}
ARCH=noarch
BUILD=${BUILD:-2}
NJOBS=${NJOBS:-2}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

TTFDIR=usr/share/fonts/TTF/${PNAME}
TYPE1DIR=usr/share/fonts/Type1/${PNAME}

# MathFonts is non-distributable
WITH_MATHFONTS=${WITH_MATHFONTS:-NO}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${NAME}-${VERSION}
SRCARCHIVE=BaKoMa4LyX-${BFVER}.zip
SRCARCHIVE2=cmbx10.ttf
SRCARCHIVE3=MathTypeTrueTypeFonts.asp
SRCARCHIVE4=mtextralic.htm
SRCARCHIVE5=MathFonts_${MFVER}.zip

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
# Bakoma TeX fonts, http://wiki.lyx.org/FAQ/Qt
DL_URL="ftp://ftp.lyx.org/pub/lyx/contrib/${SRCARCHIVE}"
# extras (cmbx10)
DL_URL2="ftp://tug.ctan.org/tex-archive/fonts/cm/ps-type1/bakoma/ttf/${SRCARCHIVE2}"
## Design Science fonts, URL: http://www.dessci.com/en/dl/fonts/
DL_URL3="http://www.dessci.com/en/dl/${SRCARCHIVE3}"
DL_URL4="http://www.dessci.com/en/support/eula/fonts/${SRCARCHIVE4}"
# http://support.wolfram.com/mathematica/systems/windows/general/latestfonts.html
DL_URL5="http://support.wolfram.com/mathematica/systems/windows/general/files/${SRCARCHIVE5}"


# if source is not present, download in source rootdir if possible, or in /tmp
if ! test -r ${SRCARCHIVE}; then
  test -r ${CWD}/${SRCARCHIVE} || wget ${DL_OPTS} ${DL_URL} || exit 1
fi
if ! test -r ${SRCARCHIVE2}; then
  test -r ${CWD}/${SRCARCHIVE2} || wget ${DL_OPTS} ${DL_URL2} || exit 1
fi
if ! test -r ${SRCARCHIVE3}; then
  test -r ${CWD}/${SRCARCHIVE3} || wget ${DL_OPTS} ${DL_URL3} || exit 1
fi
if ! test -r ${SRCARCHIVE4}; then
  test -r ${CWD}/${SRCARCHIVE4} || wget ${DL_OPTS} ${DL_URL4} || exit 1
fi
if [ "${WITH_MATHFONTS}" = "YES" ] ;then
  if ! test -r ${SRCARCHIVE5}; then
  test -r ${CWD}/${SRCARCHIVE5} || wget ${DL_OPTS} ${DL_URL5} || exit 1
  fi
fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}/usr/share/fonts

cd ${TMP}
rm -rf ${SRCDIR}
mkdir -p ${SRCDIR}
cd ${SRCDIR} || exit 1

unzip ${CWD}/${SRCARCHIVE} || exit 1
cabextract ${CWD}/${SRCARCHIVE3} || exit 1
if [ "${WITH_MATHFONTS}" = "YES" ] ;then
  unzip ${CWD}/${SRCARCHIVE5} || exit 1
fi

chmod -R u+w,go+r-w,a-s .

mkdir -p ${PKG}/${TTFDIR}
mkdir -p ${PKG}/${TYPE1DIR}

install -p -m0644 *.ttf ${CWD}/${SRCARCHIVE2} \
                  ${PKG}/${TTFDIR}/ || exit 1

if [ "${WITH_MATHFONTS}" = "YES" ] ;then
  install -p -m0644 Fonts/TrueType/*.ttf \
                    ${PKG}/${TTFDIR}/ || exit 1
  install -p -m0644 Fonts/Type1/*.pf? \
                    ${PKG}/${TYPE1DIR}/ || exit 1
fi

touch ${PKG}/${TTFDIR}/fonts.{cache-1,dir,scale}
touch ${PKG}/${TYPE1DIR}/{fonts.{cache-1,dir,scale},Symbol.pfa,SY______.PFB}

mkdir -p ${PKG}/usr/libexec/${NAME}
zcat ${CWD}/find_symbol_font.sh.gz > \
     ${PKG}/usr/libexec/${NAME}/find_symbol_font.sh || exit 1
chmod 0755 ${PKG}/usr/libexec/${NAME}/find_symbol_font.sh

( cd ${PKG}
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip --strip-debug 2> /dev/null
)

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  Licence.txt mtextralic.htm Readme.txt ${CWD}/${SRCARCHIVE4} ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
    mv ${PKG}/usr/share/man ${PKG}/usr/man
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm ${eachpage}
        done
        gzip -9 *.?
      )
    done
  )
fi

# Compress info pages, if any:
if [ -d ${PKG}/usr/info ]; then
  ( cd ${PKG}/usr/info
      rm -f dir
      gzip -9 *
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

cat > ${PKG}/install/doinst.sh <<EOF
# Update the X font indexes:
for dir in TTF Type1 ; do
  if [ -x /usr/bin/mkfontdir -o -x /usr/X11R6/bin/mkfontdir ]; then
    ( cd usr/share/fonts/\${dir}/${PNAME}
      mkfontscale .
      mkfontdir .
    )
  fi
done
if [ -x /usr/bin/fc-cache ]; then
  /usr/bin/fc-cache -f
fi
EOF

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

# Replicate slackbuild and patches
mkdir -p ${SBDIR}
install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
               ${CWD}/find_symbol_font.sh.gz ${SBDIR}/
install -m0755 ${CWD}/${NAME}.SlackBuild \
               ${SBDIR}/${NAME}.SlackBuild
sed -i "/^VERSION=/s/:-.*}/:-$VERSION}/
        /^BUILD=/s/:-.*}/:-$BUILD}/
        /^ARCH=/s/:-.*}/:-$ARCH}/
        " ${SBDIR}/${NAME}.SlackBuild

# Build package:
set +o xtrace			# no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.tgz "

if test $UID = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR}
    echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG}
    echo "${PKG} cleanup completed"
  fi
fi
