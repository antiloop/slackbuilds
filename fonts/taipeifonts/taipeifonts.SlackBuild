#!/bin/sh
#-- taipeifonts for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.br>
# Suggested usage: $ taipeifonts.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://cle.linux.org.tw/

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

CWD=$(pwd)
if [ "${TMP}" = "" ]; then
  TMP=/tmp
fi

NAME=taipeifonts
PKG=${TMP}/package-${NAME}

VERSION=${VERSION:-1.2}
ARCH=noarch
BUILD=${BUILD:-1}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

MISCDIR=usr/share/fonts/misc/${NAME}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${NAME}-${VERSION}
SRCARCHIVE=${SRCDIR}.tar.gz
SRCARCHIVE2=${NAME}.alias
SRCARCHIVE3=re-build.readme

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL="ftp://cle.linux.org.tw/pub/CLE/devel/wjwu/slackware/slackware-10.0/source/${NAME}-${VERSION}/${SRCARCHIVE1}"
DL_URL2="ftp://cle.linux.org.tw/pub/CLE/devel/wjwu/slackware/slackware-10.0/source/${NAME}-${VERSION}/${SRCARCHIVE2}"
DL_URL3="ftp://cle.linux.org.tw/pub/CLE/devel/wjwu/slackware/slackware-10.0/source/${NAME}-${VERSION}/${SRCARCHIVE3}"

# if source is not present, download in source rootdir if possible, or in /tmp
if ! test -r ${SRCARCHIVE}; then
  test -r ${CWD}/${SRCARCHIVE} || wget ${DL_OPTS} ${DL_URL} || exit 1
fi
if ! test -r ${SRCARCHIVE2}; then
  test -r ${CWD}/${SRCARCHIVE2} || wget ${DL_OPTS} ${DL_URL2} || exit 1
fi
if ! test -r ${SRCARCHIVE3}; then
  test -r ${CWD}/${SRCARCHIVE3} || wget ${DL_OPTS} ${DL_URL3} || exit 1
fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}/usr/share/fonts

cd ${TMP}
rm -rf ${SRCDIR}
tar -xzvf ${CWD}/${SRCARCHIVE} || exit 1
cd ${SRCDIR} || exit 1

chmod -R u+w,go+r-w,a-s .

bdftopcf taipei24.bdf | gzip -c > taipei24.pcf.gz
bdftopcf taipei20.bdf | gzip -c > taipei20.pcf.gz
bdftopcf taipei16.bdf | gzip -c > taipei16.pcf.gz

mkdir -p ${PKG}/${MISCDIR}

install -m 0644 taipei24.pcf.gz taipei20.pcf.gz taipei16.pcf.gz vga12x24.pcf.gz \
                ${PKG}/${MISCDIR}/ || exit 1

cat ${CWD}/${SRCARCHIVE2} > ${PKG}/${MISCDIR}/fonts.alias || exit 1

touch ${PKG}/${MISCDIR}/fonts.scale
touch ${PKG}/${MISCDIR}/fonts.dir

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
cat ${CWD}/${SRCARCHIVE3} > ${DOCDIR}/README
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
    mv ${PKG}/usr/share/man ${PKG}/usr/man
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm ${eachpage}
        done
        gzip -9 *.?
      )
    done
  )
fi

# Compress info pages, if any:
if [ -d ${PKG}/usr/info ]; then
  ( cd ${PKG}/usr/info
      rm -f dir
      gzip -9 *
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

cat > ${PKG}/install/doinst.sh <<EOF
#!/bin/sh
# Update the X font indexes:
if [ -x /usr/bin/mkfontdir -o -x /usr/X11R6/bin/mkfontdir ]; then
  ( cd ${MISCDIR}
    mkfontscale .
    mkfontdir .
  )
fi
if [ -x /usr/bin/fc-cache ]; then
  /usr/bin/fc-cache -f
fi
EOF

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

# Replicate slackbuild and patches
mkdir -p ${SBDIR}
install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
               ${CWD}/*map.*.gz ${SBDIR}/
install -m0755 ${CWD}/${NAME}.SlackBuild \
               ${SBDIR}/${NAME}.SlackBuild
sed -i "/^VERSION=/s/:-.*}/:-$VERSION}/
        /^BUILD=/s/:-.*}/:-$BUILD}/
        /^ARCH=/s/:-.*}/:-$ARCH}/
        " ${SBDIR}/${NAME}.SlackBuild

# Build package:
set +o xtrace			# no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.tgz "

if test $UID = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR}
    echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG}
    echo "${PKG} cleanup completed"
  fi
fi
