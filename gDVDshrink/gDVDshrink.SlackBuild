#!/bin/sh
TMP=/tmp
CWD=`pwd`

NAME=gDVDshrink
PKG=$TMP/package-$NAME

VERSION=0.3_9
RVERSION=0.3-9
ARCH=${ARCH:-noarch}
BUILD=${BUILD:-1xinc}

if [ -d $PKG ]; then
  # Clean up a previous build
  rm -rf $PKG
fi
mkdir -p $PKG
cd $TMP
rm -rf $NAME-$VERSION
mkdir $NAME-$VERSION
cd $NAME-$VERSION || exit 1
tar xzvf $CWD/$NAME-$RVERSION.tgz || exit 1
find . -perm 777 -exec chmod 755 {} \;
find . -perm 666 -exec chmod 644 {} \;
find . -perm 664 -exec chmod 644 {} \;
find . -perm 444 -exec chmod 644 {} \;

mkdir -p $PKG/usr/{bin,lib/${NAME}}
install -m 0755 opt/${NAME}/${NAME}.pl $PKG/usr/lib/${NAME}/${NAME}.pl
install -m 0644 opt/${NAME}/{*.pm,gui.glade} $PKG/usr/lib/${NAME}/

cat > $PKG/usr/bin/$NAME << EOF
#!/bin/sh
cd /usr/lib/$NAME
exec ./$NAME.pl
EOF
chmod 755 $PKG/usr/bin/$NAME

mkdir -p $PKG/usr/share/applications
cat > $PKG/usr/share/applications/$NAME.desktop << EOF
[Desktop Entry]
Encoding=UTF-8
Name=$NAME
Comment=DVD backup tool
Exec=$NAME
Icon=multimedia.png
Terminal=false
Type=Application
Categories=Application;AudioVideo;
EOF

mkdir -p $PKG/usr/doc/$NAME-$VERSION
cp -a \
  opt/${NAME}/{CHANGES,COPYING,README,TODO} \
  $PKG/usr/doc/$NAME-$VERSION/
chmod 644 $PKG/usr/doc/$NAME-$VERSION/*

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-required > $PKG/install/slack-required

# Replicate slackbuild and patches
mkdir -p $PKG/usr/src/slackbuilds/$NAME-$VERSION
install -m644 $CWD/slack-desc $CWD/slack-required \
              $PKG/usr/src/slackbuilds/$NAME-$VERSION/
install -m755 $CWD/$NAME.SlackBuild \
              $PKG/usr/src/slackbuilds/$NAME-$VERSION/$NAME.SlackBuild

# Build package:
set +o xtrace			# no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd $PKG ;
  /bin/chown --recursive root:root .  ;"
# `chgrp bin' is abolished from Slack 11 on
read SLACK SLACKVER < /etc/slackware-version
if test ${SLACKVER%%.*} -lt 11
then ROOTCOMMANDS="$ROOTCOMMANDS
	/usr/bin/find . -type d '(' -name bin -or -name sbin ')'	\
		-exec /bin/chgrp --recursive bin {} ';'  ;"
fi
ROOTCOMMANDS="$ROOTCOMMANDS
  /sbin/makepkg --linkadd y --chown n $CWD/$NAME-$VERSION-$ARCH-$BUILD.tgz "

if test $UID = 0; then
  eval $ROOTCOMMANDS
  set +o xtrace
elif test -x /usr/bin/fakeroot; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo $ROOTCOMMANDS | /usr/bin/fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "$ROOTCOMMANDS"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/$NAME-$VERSION
  rm -rf $PKG
fi
