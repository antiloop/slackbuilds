#!/bin/sh
#-- desktop-backgrounds for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.br>
# Suggested usage: $ desktop-backgrounds.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

NAME=desktop-backgrounds
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-9.0.0}
RHBVER=${RHBVER:-15}
IVER=${IVER:-0.0.4}
WVER=${WVER:-0.1.2}
PRVER=${PRVER:-1.0.0}
ARCH=noarch
BUILD=${BUILD:-1}
NJOBS=${NJOBS:-2}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/gnome/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=redhat-backgrounds-${RHBVER}
SRCDIR2=desktop-backgrounds-infinity-${IVER}
SRCDIR3=waves-${WVER}
SRCARCHIVE=${SRCDIR}.tar.bz2
SRCARCHIVE2=${SRCDIR2}.tar.bz2
SRCARCHIVE3=${SRCDIR3}.tar.bz2
SRCARCHIVE4=Propaganda-${PRVER}.tar.gz

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
# DL_URL="http://dl.sf.net/sourceforge/${NAME}/${SRCARCHIVE}"
#DL_URL="http://prdownloads.sourceforge.net/${NAME}/${SRCARCHIVE}"
#DL_URL="http://download.sf.net/${NAME}/${SRCARCHIVE}"

# if source is not present, download in source rootdir if possible, or in /tmp
# if ! test -r ${SRCARCHIVE}; then
# 	test -r ${CWD}/${SRCARCHIVE} || wget ${DL_OPTS} ${DL_URL} || exit 1
# fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}/usr/share/backgrounds

cd ${TMP}
rm -rf ${SRCDIR}
if $(file -L ${CWD}/${SRCARCHIVE} | grep -q ": bzip2"); then
  tar -xjvf ${CWD}/${SRCARCHIVE} || exit 1
elif $(file -L ${CWD}/${SRCARCHIVE} | grep -q ": gzip"); then
  tar -xzvf ${CWD}/${SRCARCHIVE} || exit 1
fi
cd ${SRCDIR} || exit 1
if $(file -L ${CWD}/${SRCARCHIVE2} | grep -q ": bzip2"); then
  tar -xjvf ${CWD}/${SRCARCHIVE2} || exit 1
elif $(file -L ${CWD}/${SRCARCHIVE2} | grep -q ": gzip"); then
  tar -xzvf ${CWD}/${SRCARCHIVE2} || exit 1
fi

# add waves
if $(file -L ${CWD}/${SRCARCHIVE3} | grep -q ": bzip2"); then
  tar -xjvf ${CWD}/${SRCARCHIVE3} || exit 1
elif $(file -L ${CWD}/${SRCARCHIVE3} | grep -q ": gzip"); then
  tar -xzvf ${CWD}/${SRCARCHIVE3} || exit 1
fi

# add propaganda
( cd tiles || exit 1
  if $(file -L ${CWD}/${SRCARCHIVE4} | grep -q ": bzip2"); then
    tar -xjvf ${CWD}/${SRCARCHIVE4} || exit 1
  elif $(file -L ${CWD}/${SRCARCHIVE4} | grep -q ": gzip"); then
    tar -xzvf ${CWD}/${SRCARCHIVE4} || exit 1
  fi
) || exit 1

chmod -R u+w,go+r-w,a-s .

cp -a images ${PKG}/usr/share/backgrounds/ || exit 1
cp -a tiles ${PKG}/usr/share/backgrounds/ || exit 1

mkdir -p ${PKG}/usr/share/backgrounds/infinity
# copy actual image files
cp -a ${SRCDIR2}/*.png \
      ${PKG}/usr/share/backgrounds/infinity/ || exit 1
# copy animation xml file 
cp -a ${SRCDIR2}/infinity.xml \
      ${PKG}/usr/share/backgrounds/infinity/ || exit 1

mkdir -p ${PKG}/usr/share/backgrounds/waves
# copy actual image files
cp -a ${SRCDIR3}/*.png \
      ${PKG}/usr/share/backgrounds/waves/ || exit 1
# copy animation xml file 
cp -a ${SRCDIR3}/waves.xml \
      ${PKG}/usr/share/backgrounds/waves/ || exit 1

mkdir -p ${PKG}/usr/share/gnome-background-properties
cp -a desktop-backgrounds-basic.xml \
      ${PKG}/usr/share/gnome-background-properties/ || exit 1

cp -a ${SRCDIR2}/desktop-backgrounds-infinity.xml \
      ${PKG}/usr/share/gnome-background-properties/ || exit 1

cp -a ${SRCDIR3}/desktop-backgrounds-waves.xml \
      ${PKG}/usr/share/gnome-background-properties/ || exit 1

bgdir=${PKG}/usr/share/backgrounds
for I in tiles/Propaganda images/dewdop_leaf.jpg images/dragonfly.jpg \
         images/frosty_pipes.jpg images/in_flight.jpg images/leaf_veins.jpg \
         images/leafdrops.jpg images/lightrays-transparent.png images/lightrays.png \
         images/lightrays2.png images/raingutter.jpg images/riverstreet_rail.jpg \
         images/sneaking_branch.jpg images/space images/yellow_flower.jpg; do
  rm -rf ${bgdir}/${I}
done

# FedoraWaves theme for KDE4
mkdir -p ${PKG}/usr/share/wallpapers/Fedora_Waves/contents/images
zcat ${CWD}/FedoraWaves-metadata.desktop.gz > \
     ${PKG}/usr/share/wallpapers/Fedora_Waves/metadata.desktop || exit 1
( cd ${PKG}/usr/share/wallpapers/Fedora_Waves/contents || exit 1
  ln -s ../../../backgrounds/waves/waves-eeepc-3-night.png screenshot.png
  cd ${PKG}/usr/share/wallpapers/Fedora_Waves/contents/images || exit 1
  ln -s ../../../../backgrounds/waves/waves-normal-3-night.png 1024x768.png
  ln -s ../../../../backgrounds/waves/waves-wide-3-night.png 1280x800.png
  # FIXME: there doesn't seem to be a 5:4 image in the latest iteration
  ln -s ../../../../backgrounds/waves/waves-wide-3-night.png 1280x1024.png
  ln -s ../../../../backgrounds/waves/waves-wide-3-night.png 1440x900.png
  ln -s ../../../../backgrounds/waves/waves-normal-3-night.png 1600x1200.png
  ln -s ../../../../backgrounds/waves/waves-wide-3-night.png 1920x1200.png
) || exit 1

# Compatibility cruft

sed -i -e '/backgrounds\/images/s|default|fc-default|g' \
          ${PKG}/usr/share/gnome-background-properties/desktop-backgrounds-basic.xml || exit 1

( cd ${PKG}/usr/share/backgrounds/images || exit 1
  ln -s ../waves/waves-normal-0-morn.png fc-default.png
  ln -s ../waves/waves-normal-0-morn.png fc-default.jpg
  ln -s ../waves/waves-wide-0-morn.png fc-default-wide.png
  ln -s ../waves/waves-wide-0-morn.png fc-default-5_4.png
  cd ..
  ln -s waves/waves-normal-0-morn.png fc-default.png
) || exit 1

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  images/space/{*.ps,README*} ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
  mv ${PKG}/usr/share/man ${PKG}/usr/man
  rmdir ${PKG}/usr/share
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

# Compress info pages, if any:
if [ -d ${PKG}/usr/info ]; then
  ( cd ${PKG}/usr/info
      rm -f dir
      gzip -9 *
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

# Replicate slackbuild and patches
mkdir -p ${SBDIR}
install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
               ${CWD}/*.desktop.gz ${SBDIR}/
install -m0755 ${CWD}/${NAME}.SlackBuild \
               ${SBDIR}/${NAME}.SlackBuild
sed -i "/^VERSION=/s/:-.*}/:-$VERSION}/
        /^BUILD=/s/:-.*}/:-$BUILD}/
        /^ARCH=/s/:-.*}/:-$ARCH}/
        " ${SBDIR}/${NAME}.SlackBuild

# Build package:
set +o xtrace        # no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.tgz "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
