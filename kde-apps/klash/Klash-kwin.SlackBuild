#!/bin/sh
# Copyright 2006  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


PKGNAM=Klash-kwin
RPKGNAM=Klash
DPKGNAM=KLASH
VERSION=${VERSION:-0.81}
ARCH=${ARCH:-i686}
BUILD=${BUILD:-1xinc}


CWD=`pwd`
if [ "$TMP" = "" ]; then
  TMP=/tmp
fi
PKG=$TMP/package-${PKGNAM}

if [ "$ARCH" = "i386" ]; then
  SLKCFLAGS="-O2 -march=i386 -mcpu=i686"
elif [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=athlon64 -mtune=athlon64 -msse3 -pipe"
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2"
fi

if [ -d $PKG ]; then
  # Clean up a previous build
  rm -rf $PKG
fi
mkdir -p $PKG
cd $TMP
rm -rf ${RPKGNAM}-${VERSION}
tar xjvf $CWD/${RPKGNAM}-$VERSION.tar.bz2 || exit 1
cd ${RPKGNAM}-$VERSION || exit 1

# Make sure ownerships and permissions are sane:
find . -perm 666 -exec chmod 644 {} \;
find . -perm 664 -exec chmod 644 {} \;
find . -perm 600 -exec chmod 644 {} \;
find . -perm 444 -exec chmod 644 {} \;
find . -perm 400 -exec chmod 644 {} \;
find . -perm 440 -exec chmod 644 {} \;
find . -perm 777 -exec chmod 755 {} \;
find . -perm 775 -exec chmod 755 {} \;
find . -perm 511 -exec chmod 755 {} \;
find . -perm 711 -exec chmod 755 {} \;
find . -perm 555 -exec chmod 755 {} \;

# Configure:
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/opt/kde \
  --disable-rpath \
  --disable-debug \
  --disable-warnings \
  --disable-dependency-tracking \
  --build=$ARCH-slackware-linux

# Build and install:
make -j4 || exit 1
make install DESTDIR=$PKG || exit 1

tar xjvf $CWD/${DPKGNAM}-DATA.tar.bz2 || exit 1

rm -rf ${DPKGNAM}/Default
cp -a ${DPKGNAM}/* $PKG/opt/kde/share/apps/kwin/klash/ || exit 1
find $PKG/opt/kde/share/apps/kwin/klash -type f | xargs chmod 644

# Strip binaries:
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

# Add a documentation directory:
mkdir -p $PKG/usr/doc/${PKGNAM}-$VERSION
cp -a \
  AUTHORS COPYING \
  $PKG/usr/doc/${PKGNAM}-$VERSION

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-required > $PKG/install/slack-required

# Replicate slackbuild and patches
mkdir -p $PKG/usr/src/slackbuilds/${PKGNAM}-$VERSION
install -m644 $CWD/slack-desc $CWD/slack-required \
              $PKG/usr/src/slackbuilds/${PKGNAM}-$VERSION/
install -m755 $CWD/${PKGNAM}.SlackBuild \
              $PKG/usr/src/slackbuilds/${PKGNAM}-$VERSION/${PKGNAM}.SlackBuild

# Build package:
set +o xtrace			# no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd $PKG ;
  /bin/chown --recursive root:root .  ;"
# `chgrp bin' is abolished from Slack 11 on
read SLACK SLACKVER < /etc/slackware-version
if test ${SLACKVER%%.*} -lt 11
then ROOTCOMMANDS="$ROOTCOMMANDS
	/usr/bin/find . -type d '(' -name bin -or -name sbin ')'	\
		-exec /bin/chgrp --recursive bin {} ';'  ;"
fi
ROOTCOMMANDS="$ROOTCOMMANDS
  /sbin/makepkg --linkadd y --chown n $CWD/$PKGNAM-$VERSION-$ARCH-$BUILD.tgz "

if test $UID = 0; then
  eval $ROOTCOMMANDS
  set +o xtrace
elif test -x /usr/bin/fakeroot; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo $ROOTCOMMANDS | /usr/bin/fakeroot
else
  echo "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "$ROOTCOMMANDS"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/${RPKGNAM}-$VERSION
  rm -rf $PKG
fi
