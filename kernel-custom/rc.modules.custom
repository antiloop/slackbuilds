#!/bin/sh
# rc.modules 3.1  Thu Aug 28 14:01:35 PDT 2003  pjv <volkerdi@slackware.com>
#
# This file loads extra drivers into the Linux kernel.
# The modules will be looked for under /lib/modules/<kernel version number>
# On systems using KMOD this file will be mostly commented out, but is still
# useful for loading selected modules at boot time.
#
# Most Linux kernel modules will accept extra options such as IRQ or base
# address, or to set various modes (such as 10baseT or BNC, etc).  The Linux
# kernel source is the best place to look for extra documentation for the
# various modules.  This can be found under /usr/src/linux/Documentation if
# you've the installed the kernel sources.  Also, the kernel source docs are
# present on the Slackware CD in the /docs/linux-2.x.x directory.
#
# NOTE:  This may not be a complete list of modules.  If you don't see what
# you're looking for, look around in /lib/modules/2.x.x/ for an appropriate
# module.  Also, if any problems arise loading or using these modules, try
# compiling and installing a custom kernel that contains the support instead.
# That always works. ;^)
#

### Update module dependencies ###
RELEASE=$(uname -r)
# If /usr is mounted and we have 'find', we can try to take a shortcut:
if [ -x /usr/bin/find -a -e /lib/modules/$RELEASE/modules.dep \
     -a /lib/modules/$RELEASE/modules.dep -nt /etc/modules.conf ]; then
  NEWMODS="`/usr/bin/find /lib/modules/$RELEASE -type f -newer /lib/modules/$RELEASE/modules.dep`"
  # Only rebuild dependencies if new module(s) are found:
  if [ ! "" = "$NEWMODS" ]; then
    echo "Updating module dependencies for Linux $RELEASE:"
    /sbin/depmod -a
  else
    echo "Module dependencies up to date (no new kernel modules found)."
  fi
else # we don't have find, or there is no existing modules.dep, or it is out of date.
  echo "Updating module dependencies for Linux $RELEASE:"
  /sbin/depmod -A
fi

#### APM support ###
# APM is a BIOS specification for saving power using several different
# techniques. This is mostly useful for battery powered laptops.
#/sbin/modprobe apm

#### PC parallel port support ###
#if cat /proc/ksyms | grep "\[parport_pc\]" 1> /dev/null 2> /dev/null ; then
#  echo "parport0 is built-in, not loading module" > /dev/null
#else
#  if [ -r /lib/modules/$RELEASE/kernel/drivers/parport/parport_pc.o \
#       -o -r /lib/modules/$RELEASE/kernel/drivers/parport/parport_pc.o.gz \
#       -o -r /lib/modules/$RELEASE/kernel/drivers/parport/parport_pc.ko ]; then
#    # Generic setup example:
#    /sbin/modprobe parport_pc
#    # Hardware specific setup example  (PLIP requires an IRQ, and the
#    # ECP protocol requires a DMA channel)
#    # This may also give better performance in general.
#    #/sbin/modprobe parport_pc io=0x378 irq=7 dma=1
#  fi
#fi

#### Parallel printer support ###
#if cat /proc/ksyms | grep "\[lp\]" 1> /dev/null 2> /dev/null ; then
#  echo "lp support built-in, not loading module" > /dev/null
#else
#  if [ -r /lib/modules/$RELEASE/kernel/drivers/char/lp.o \
#       -o -r /lib/modules/$RELEASE/kernel/drivers/char/lp.o.gz \
#       -o -r /lib/modules/$RELEASE/kernel/drivers/char/lp.ko ]; then
#    /sbin/modprobe lp
#  fi
#fi

### Filesystem Quota support ###
if grep -q quota /etc/fstab ; then
  #/sbin/modprobe quota_v1
  /sbin/modprobe quota_v2
fi

### Parallel port IP ###
#/sbin/modprobe plip

### AGP (Accelerated Graphics Port) GART support ###
# This module takes care of programming the GART (part of your motherboard's
# chipset that handles gathering data from memory and passing it to the
# card) and enables faster AGP transfers.  The AGP GART module is required
# to use AGP features of your 3D rendering video card.  You'll need this to
# use XFree86's direct rendering support, for example.
/sbin/modprobe agpgart
/sbin/modprobe amd64_agp

### non-IDE CD-ROM drive support ###
# These modules add CD-ROM drive support.  Most of these drivers will probe
# for the I/O address and IRQ of the drive automatically if the parameters
# to configure them are omitted. Typically the I/O address will be specified
# in hexadecimal, e.g.: cm206=0x300,11
#
# ***NONE*** of these drivers are for use with IDE/ATAPI CD-ROM drives.  That
# support is already built into every pre-compiled Slackware Linux kernel.
# Also, note that all of the manufacturers listed below stopped making these
# types of wacky-interface drives years ago and all make IDE/ATAPI-interface
# CD-ROM drives now.  So, just because your drive says "Mitsumi" on it is not
# reason enough to think you need the special Mitsumi module loaded, etc.  If
# you got your drive within the last couple of years it's probably IDE.  Try
# tossing a disc in the drive and mounting it on the various IDE interfaces it
# could be using, like /dev/hdc.
#
#/sbin/modprobe aztcd aztcd=<I/O address>
#/sbin/modprobe cdu31a cdu31a_port=<I/O address> cdu31a_irq=<interrupt>
#/sbin/modprobe cm206 cm206=<I/O address>,<IRQ>
#/sbin/modprobe gscd gscd=<I/O address>
#/sbin/modprobe mcd mcd=<I/O address>,<IRQ>
#/sbin/modprobe mcdx mcdx=<I/O address>,<IRQ>
#/sbin/modprobe optcd optcd=<I/O address>
# Below, this last number is "1" for SoundBlaster Pro card, or "0" for a clone.
#/sbin/modprobe sbpcd sbpcd=<I/O address>,1
#/sbin/modprobe sonycd535 sonycd535=<I/O address>
#/sbin/modprobe sjcd sjcd=<I/O address>

# CD-ROM drives on ISP16, MAD16 or Mozart sound card:
#/sbin/modprobe isp16=[<port>[,<irq>[,<dma>]]][[,]<drive_type>]
#  where the values are one of: port=0x340,0x320,0x330,0x360
#                               irq=0,3,5,7,9,10,11
#                               dma=0,3,5,6,7
#                               drive_type=noisp16,Sanyo,Panasonic,Sony,Mitsumi

### Cyclades multiport serial card support ###
#/sbin/modprobe cyclades

#### Serial line IP support (SLIP/CSLIP/PPP) ###
## This module is for SLIP/CSLIP support:
#/sbin/modprobe slip

## Load PPP:
## Check kernel version to determine module names to use
#if [ "`uname -r | cut -f 1,2 -d .`" = "2.2" ]; then
#  # This module is for PPP support:
#  /sbin/modprobe ppp
#else # assume 2.4 or newer
#  # This module is for PPP support:
#  /sbin/modprobe ppp_generic
#  # This PPP plugin supports PPP over serial lines:
#  /sbin/modprobe ppp_async
#  # Use this plugin instead for HDLC (used for high-speed leased lines like T1/E1)
#  # /sbin/modprobe ppp_synctty
#fi
## This module provides compression for PPP (optional):
##/sbin/modprobe ppp_deflate

### USB Host Controllers:
# Universal Host Controller Interface (Intel standard):
#/sbin/modprobe usb-uhci
# Universal Host Controller Interface (alternate JE):
#/sbin/modprobe uhci
# Open Host Controller Interface (Compaq/Microsoft/National standard):
#/sbin/modprobe usb-ohci

# Don't load usb if 'nousb' was given at boot.
if ! grep nousb /proc/cmdline 1> /dev/null 2> /dev/null ; then
	echo "Activating USB EHCI: /sbin/modprobe ehci_hcd"
#	/sbin/modprobe shpchp
	/sbin/modprobe ehci_hcd
	echo "Activating USB UHCI: /sbin/modprobe uhci_hcd"
	/sbin/modprobe uhci_hcd
# Don't load usb joystick if 'nousbjdev' was given at boot
	if ! grep nousbjdev /proc/cmdline 1> /dev/null 2> /dev/null ; then
		echo "Activating Joystick: /sbin/modprobe joydev"
		/sbin/modprobe joydev
	fi
# Don't load usblp if 'nousblb' was given at boot
	if ! grep nousblp /proc/cmdline 1> /dev/null 2> /dev/null ; then
		echo "Activating USB Printer: /sbin/modprobe usblp"
		/sbin/modprobe usblp
	fi
# Don't load usb-storage if 'nousbstrg' was given at boot
	if ! grep nousbstrg /proc/cmdline 1> /dev/null 2> /dev/null ; then
		echo "Activating usb-storage: /sbin/modprobe usb-storage"
		/sbin/modprobe usb-storage
	fi
fi

### USB device support:
# (Note that once you've loaded USB hub support most USB devices will
# trigger the kernel to load their modules automatically)
# USB "Human Interface Device" driver; handles most USB mice, joysticks,
# gamepads, steering wheels, keyboards, trackballs and digitizers.
#/sbin/modprobe hid
# Simple HIDBP USB mouse driver, if hid doesn't work:
#/sbin/modprobe usbmouse
# Simple HIDBP USB keyboard driver, if hid doesn't work:
#/sbin/modprobe usbkbd
# Wacom Graphire and Intuos tablet driver:
#/sbin/modprobe wacom
# Logitech WingMan Force joystick:
#/sbin/modprobe wmforce
# USB audio:
#/sbin/modprobe audio
# USB modem support:
#/sbin/modprobe acm
# USB serial converter:
#/sbin/modprobe usbserial
# USB printer support:
#/sbin/modprobe printer
# IBM "C-It" USB video camera:
#/sbin/modprobe ibmcam framerate=1
# USB OV511 Camera support:
#/sbin/modprobe ov511
# USB ADMtek Pegasus-based ethernet device support:
#/sbin/modprobe pegasus
# Kawasaki USB ethernet controller support:
#/sbin/modprobe kaweth
# USB Kodak DC-2xx Camera support:
#/sbin/modprobe dc2xx
# USB Mustek MDC800 Digital Camera Support:
#/sbin/modprobe mdc800
# USB Mass Storage support:
#/sbin/modprobe usb-storage
# USS720 parallel-port driver:
#/sbin/modprobe uss720
# Prolific PL-2302 USB-to-USB network device:
#/sbin/modprobe plusb
# USB Diamond Rio500 support:
#/sbin/modprobe rio500
# D-Link DSB-R100 FM radio support:
#/sbin/modprobe dsbr100
# USB Bluetooth support:
#/sbin/modprobe bluetooth
# USB scanner support (requires patched SANE from http://fachschaft.cup.uni-muenchen.de/~neukum/scanner.html):
#/sbin/modprobe scanner

### USB event drivers:
# Keyboard input:
#/sbin/modprobe keybdev
# Mouse input:
#/sbin/modprobe mousedev
# Joystick input:
#/sbin/modprobe joydev
# Generic event reporting device:
#/sbin/modprobe evdev

### OSS Sound support ###
### (Old Sound System ;-)
# Sound Blaster Pro/16 support:
#/sbin/modprobe sb io=0x220 irq=5 dma=3 dma16=5 mpu_io=0x300
# Sound Blaster Live support:
#/sbin/modprobe emu10k1
# MAD16 support:
#/sbin/modprobe mad16 io=0x530 irq=7 dma=0 dma16=1
# AD1816(A) sound driver:
#/sbin/modprobe modprobe ad1816 io=0x530 irq=5 dma=1 dma2=3 ad1816_clockfreq=33000
# Crystal CS4232 based (PnP) cards:
#/sbin/modprobe cs4232
# ES1370 support, such as Sound Blaster 128PCI:
#/sbin/modprobe es1370
# ES1371 support, such as Sound Blaster 64V PCI:
#/sbin/modprobe es1371
# ESS Maestro, Maestro2, Maestro2E:
#/sbin/modprobe maestro
# ESS Maestro3/Allegro:
#/sbin/modprobe maestro3
# VIA VT82Cxxx Audio Controller
#/sbin/modprobe via82cxxx_audio
# (For information on configuring other sound cards with Linux,
# see the documentation in /usr/src/linux/Documentation/sound/,
# and /usr/src/linux/Documentation/Configure.help.

### Joystick support ###
# The core joystick input support module, needed by all of the
# joystick devices below:
#/sbin/modprobe joydev
### Next, you must load a module for your gameport.
# Classic ISA/PnP gameports:
#/sbin/modprobe ns558
# Crystal SoundFusion gameports:
#/sbin/modprobe cs461x
# Aureal Vortex and Trident 4DWave gameports:
#/sbin/modprobe pcigame
# SoundBlaster Live! gameports:
#/sbin/modprobe emu10k1-gp
### Drivers for various joystick devices ###
# Analog joysticks and gamepads:
#/sbin/modprobe analog
# Assassin 3D and MadCatz Panther devices:
#/sbin/modprobe a3d
# Logitech ADI digital joysticks and gamepads:
#/sbin/modprobe adi
# Creative Labs Blaster Cobra gamepad:
#/sbin/modprobe cobra
# Genius Flight2000 Digital joysticks and gamepads:
#/sbin/modprobe gf2k
# Gravis GrIP joysticks and gamepads:
#/sbin/modprobe grip
# InterAct digital joysticks and gamepads:
#/sbin/modprobe interact
# ThrustMaster DirectConnect joysticks and gamepads:
#/sbin/modprobe tmdc
# Microsoft SideWinder digital joysticks and gamepads:
#/sbin/modprobe sidewinder
### Serial port game controller support ###
# Both of these are needed for serial-port game controllers:
#/sbin/modprobe serio
#/sbin/modprobe serport
# Logitech WingMan Warrior joystick:
#/sbin/modprobe warrior
# LogiCad3d Magellan/SpaceMouse 6dof controller:
#/sbin/modprobe magellan
# SpaceTec SpaceOrb/Avenger 6dof controller:
#/sbin/modprobe spaceorb
# SpaceTec SpaceBall 4000 FLX 6dof controller:
#/sbin/modprobe spaceball
# Gravis Stinger gamepad:
#/sbin/modprobe stinger
# I-Force joysticks/wheels:
#/sbin/modprobe iforce
### Parallel port connected controllers ###
# Multisystem, Sega Genesis, Saturn joysticks and gamepads:
#/sbin/modprobe db9
# Multisystem, NES, SNES, N64, PSX joysticks and gamepads:
#/sbin/modprobe gamecon
# Multisystem joysticks via TurboGraFX device:
#/sbin/modprobe turbografx

### Appletalk support ###
# This is needed if you want to run netatalk, a package which allows
# you to use you Linux box as a file and print server for Apple Macintosh
# computers on your local network.
#/sbin/modprobe appletalk

### IPX networking support ###
#/sbin/modprobe ipx

### IDE device support ###
# IDE CD-ROM drives:
#/sbin/modprobe ide-cd
# IDE hard drives:
#/sbin/modprobe ide-disk
# IDE floppy drives:
#/sbin/modprobe ide-floppy
# IDE tape drives:
#/sbin/modprobe ide-tape

### Network device support ###
# Most of these drivers will probe automatically for the card if you don't
# specify an I/O address and IRQ.  But, the NE2000 driver needs at least the
# I/O.  For complete information, see the net-modules.txt file that comes
# with the Linux 2.2.x source code.  This file can also be found on the
# Slackware CD-ROM in the /docs/linux-2.2.x/ directory.
#
# First, if setup probing found a network card, there may be an 'rc.netdevice'
# file that we should run to load the network module:
if [ -x /etc/rc.d/rc.netdevice ]; then
  . /etc/rc.d/rc.netdevice
fi
### Ethernet cards based on the 8390 chip.
# 3com 3c503 support:
#/sbin/modprobe 3c503
# Ansel Communications EISA 3200 support:
#/sbin/modprobe ac3200
# Cabletron E21xx support:
#/sbin/modprobe e2100
# HP PCLAN+ (27247B and 27252A) support:
#/sbin/modprobe hp-plus
# HP PCLAN (27245 and other 27xxx series) support:
#/sbin/modprobe hp
# NE2000/NE1000 support (non PCI):
#/sbin/modprobe ne io=0x300 # NE2000 at 0x300
#/sbin/modprobe ne io=0x280 # NE2000 at 0x280
#/sbin/modprobe ne io=0x320 # NE2000 at 0x320
#/sbin/modprobe ne io=0x340 # NE2000 at 0x340
#/sbin/modprobe ne io=0x360 # NE2000 at 0x360
# PCI NE2000 clone support:
#/sbin/modprobe ne2k-pci
# SMC Ultra support:
#/sbin/modprobe smc-ultra
# SMC Ultra32 EISA support:
#/sbin/modprobe smc-ultra32
# Western Digital WD80*3 (and clones) support:
#/sbin/modprobe wd
#
# Other network hardware drivers:
#
# 3com 3c501 (consider buying a new card, since the 3c501 is slow,
# broken, and obsolete):
#/sbin/modprobe 3c501
# 3com 3c503:
#/sbin/modprobe 3c503
# 3com 3c505:
#/sbin/modprobe 3c505
# 3com 3c507:
#/sbin/modprobe 3c507
# 3com 3c509 and 3c579:
#/sbin/modprobe 3c509
# 3com 3c515:
#/sbin/modprobe 3c515
# This one works for all 3com 3c590/3c592/3c595/3c597 and the
# EtherLink XL 3c900 and 3c905 cards:
#/sbin/modprobe 3c59x
# Apricot Xen-II on board Ethernet:
#/sbin/modprobe apricot
# Generic ARCnet support:
#/sbin/modprobe arcnet
# AT1700/1720 support:
#/sbin/modprobe at1700
# AT-LAN-TEC/RealTek pocket adapter support:
#/sbin/modprobe atp
# BPQ Ethernet driver:
#/sbin/modprobe bpqether
# Generic DECchip & DIGITAL EtherWORKS PCI/EISA:
#/sbin/modprobe de4x5
# D-Link DE600 pocket adapter support:
#/sbin/modprobe de600
# D-Link DE620 pocket adapter support:
#/sbin/modprobe de620
# DEPCA support:
#/sbin/modprobe depca
# Digi International RightSwitch cards:
#/sbin/modprobe dgrs
# Intel EtherExpress Pro support:
#/sbin/modprobe eepro
# Intel EtherExpress PRO/100 PCI support:
#/sbin/modprobe eepro100
# Intel EtherExpress PRO/1000 PCI support:
#/sbin/modprobe e1000
# Intel EtherExpress16 support:
#/sbin/modprobe eexpress
# SMC EtherPower II 9432 PCI support:
#/sbin/modprobe epic100
# ICL EtherTeam 16i/32 support:
#/sbin/modprobe eth16i
# DEC EtherWorks 3 support:
#/sbin/modprobe ewrk3
# Fujitsu FMV-181/182/183/184 support:
#/sbin/modprobe fmv18x
# HP 10/100VG PCLAN (ISA, EISA, PCI) support:
#/sbin/modprobe hp100
# IBM Tropic chipset based adapter support:
#/sbin/modprobe ibmtr
# AMD LANCE and PCnet (AT1500 and NE2100) support:
#/sbin/modprobe lance
# National Semiconductor DP8381x series PCI Ethernet support:
#/sbin/modprobe natsemi
# NI5210 support:
#/sbin/modprobe ni52
# NI6510 support:
#/sbin/modprobe ni65
# AMD PCnet32 (VLB and PCI) support:
#/sbin/modprobe pcnet32
# Red Creek Hardware Virtual Private Network (VPN) support:
#/sbin/modprobe rcpci
# RealTek 8129/8139 (not 8019/8029!) support:
#/sbin/modprobe 8139too
# RealTek 8139C+ enhanced support:
#/sbin/modprobe 8139cp
# Sangoma S502A FRAD support:
#/sbin/modprobe sdla
# SMC 9194 support:
#/sbin/modprobe smc9194
# TI ThunderLAN support:
#/sbin/modprobe tlan
# DECchip Tulip (dc21x4x) PCI support:
#/sbin/modprobe tulip
# VIA Rhine support:
#/sbin/modprobe via-rhine
# AT&T WaveLAN & DEC RoamAbout DS support:
#/sbin/modprobe wavelan
# Packet Engines Yellowfin Gigabit-NIC support:
#/sbin/modprobe yellowfin
# Davicom DM9xxx (9102/9132/9100/9802...)
#/sbin/modprobe dmfe
# SiS 900/7016 PCI Fast Ethernet
#/sbin/modprobe sis900

# Don't load network hardware if 'nonet' was given at boot.
if ! grep nonet /proc/cmdline 1> /dev/null 2> /dev/null ; then
    echo -n "Activating network hardware: /sbin/modprobe skge"
   /sbin/modprobe skge
fi

### Serial line load balancing support ###
#/sbin/modprobe eql

### "dummy" IP support ###
# A dummy IP driver.  Essentially a loopback device.  Can be useful --
# see the Network Administrator's Guide from sunsite.unc.edu:/pub/Linux/docs/LDP
#/sbin/modprobe dummy

### ISDN kernel support ###
#/sbin/modprobe isdn
# ISDN loop (provides a virtual ISDN card for testing):
#/sbin/modprobe isdnloop

### ISDN interface support ###
# AVM-B1 with CAPI2.0 driver (requires additional firmware; see
# /usr/src/linux/Documentation/isdn/README.avmb1):
#/sbin/modprobe capidrv
# HiSax SiemensChipSet driver (supports AVM A1, Elsa ISDN cards,
# Teles S0-16.0, Teles S0-16.3, Teles S0-8, Teles/Creatix PnP,
# ITK micro ix1 and many compatibles):
#/sbin/modprobe hisax
# IBM Active 2000 ISDN card support (requires additional firmware; see
# /usr/src/linux/Documentation/isdn/README.act2000 for more information)
#/sbin/modprobe act2000
# ICN active ISDN card driver:
#/sbin/modprobe icn
# PCBIT-D driver (requires additional firmware; see
# /usr/src/linux/Documentation/isdn/README.pcbit for more information)
#/sbin/modprobe pcbit
# Spellcaster BRI ISDN driver:
#/sbin/modprobe sc

### Binary format support ###
#/sbin/modprobe binfmt_aout
#/sbin/modprobe binfmt_elf
#/sbin/modprobe binfmt_java
#/sbin/modprobe binfmt_misc

### Filesystem support ###
#/sbin/modprobe adfs
#/sbin/modprobe affs
#/sbin/modprobe coda
#/sbin/modprobe ext2
#/sbin/modprobe fat
#/sbin/modprobe hfs
#/sbin/modprobe hpfs
#/sbin/modprobe isofs
#/sbin/modprobe minix
#/sbin/modprobe msdos
#/sbin/modprobe ncpfs
#/sbin/modprobe nfs
#/sbin/modprobe ntfs
#/sbin/modprobe qnx4
#/sbin/modprobe romfs
#/sbin/modprobe smbfs
#/sbin/modprobe sysv
#/sbin/modprobe ufs
#/sbin/modprobe umsdos
#/sbin/modprobe vfat

### RAID (Multiple Devices) support ###
#/sbin/modprobe linear
#/sbin/modprobe raid0
#/sbin/modprobe raid1
#/sbin/modprobe raid5

# *** THIS IS STILL LOADED BY DEFAULT ***
# SCSI emulation support.  This will provide SCSI host adapter emulation
# for IDE ATAPI devices, and will allow you to use a SCSI device driver
# instead of a native ATAPI driver.  This is useful if you have an ATAPI
# device for which no native driver has been written (for example, an ATAPI
# PD-CD or CD-RW drive); you can then use this emulation together with an
# appropriate SCSI device driver.  Note that this option does NOT allow you
# to attach SCSI devices to a box that doesn't have a SCSI host adapter
# installed.  Also, you'll need to exclude your CD-RW from being grabbed by
# the normal ATAPI driver by passing a flag to the kernel at boot time.
# If you're using LILO, add this:  append="hdc=ide-scsi"
# Replace "hdc" with the appropriate device name.
/sbin/modprobe ide-scsi

# SCSI kernel support:
#/sbin/modprobe scsi_mod
#/sbin/modprobe scsi_syms
#/sbin/modprobe sd_mod
#/sbin/modprobe sg
#/sbin/modprobe sr_mod
#/sbin/modprobe st

# SCSI controller support:
# NCR53c7,8xx SCSI support (note there is another driver for
# the 53c8xx family below):
#/sbin/modprobe 53c7,8xx
# AM53/79C974 PCI SCSI support:
#/sbin/modprobe AM53C974
# BusLogic MultiMaster and FlashPoint SCSI support:
#/sbin/modprobe BusLogic
# NCR53c406a SCSI support:
#/sbin/modprobe NCR53c406a
# Initio INI-A100U2W SCSI support:
#/sbin/modprobe a100u2w
# AdvanSys SCSI support:
#/sbin/modprobe advansys
# Adaptec AHA152X/2825 support:
#/sbin/modprobe aha152x
# Adaptec AHA1542 support:
#/sbin/modprobe aha1542
# Adaptec AHA1740 support:
#/sbin/modprobe aha1740
# This is support for the various aic7xxx based Adaptec SCSI
# controllers. These include the 274x EISA cards; 284x VLB cards;
# 2902, 2910, 293x, 294x, 394x, 3985 and several other PCI and
# motherboard based SCSI controllers from Adaptec:
#/sbin/modprobe aic7xxx
# ACARD 870U/W SCSI support:
#/sbin/modprobe atp870u
# DTC 3180/3280 SCSI support:
#/sbin/modprobe dtc
# EATA ISA/EISA/PCI (DPT and generic EATA/DMA-compliant boards) support:
#/sbin/modprobe eata
# EATA-DMA [Obsolete -- use above driver] (DPT, NEC, AT&T, SNI, AST,
# Olivetti, Alphatronix) support:
#/sbin/modprobe eata_dma
# EATA-PIO (old DPT PM2001, PM2012A) support:
#/sbin/modprobe eata_pio
# Future Domain 16xx SCSI/AHA-2920A support:
#/sbin/modprobe fdomain
# Generic NCR5380/53c400 SCSI support:
#/sbin/modprobe g_NCR5380
# GDT SCSI Disk Array Controller support:
#/sbin/modprobe gdth
# IOMEGA parallel port (imm - newer drives like ZipPlus):
#/sbin/modprobe imm
# Always IN2000 SCSI support:
#/sbin/modprobe in2000
# Initio 91XXU(W) SCSI support:
#/sbin/modprobe initio
# AMI MegaRAID support:
#/sbin/modprobe megaraid
# NCR53C8XX SCSI support:
#/sbin/modprobe ncr53c8xx
# PAS16 SCSI support:
#/sbin/modprobe pas16
# PCI2000 support:
#/sbin/modprobe pci2000
# PCI2220i support:
#/sbin/modprobe pci2220i
# IOMEGA parallel port (ppa - older parallel Zip drives):
#/sbin/modprobe ppa
# PSI240i support:
#/sbin/modprobe psi240i
# Qlogic FastSCSI! cards:
#/sbin/modprobe qlogicfas
# QLogic ISP2100 SCSI support:
#/sbin/modprobe qlogicfc
# This driver works for all QLogic PCI SCSI host adapters (IQ-PCI,
# IQ-PCI-10, IQ_PCI-D) except for the PCI-basic card. (This latter
# card is supported by the "AM53/79C974 PCI SCSI" driver):
#/sbin/modprobe qlogicisp
# Seagate ST-02 and Future Domain TMC-8xx SCSI support:
#/sbin/modprobe seagate
# Symbios Logic sym53c416 support:
#/sbin/modprobe sym53c416
# Trantor T128/T128F/T228 SCSI support:
#/sbin/modprobe t128
# Tekram DC390(T) and Am53/79C974 (PCscsi) SCSI support:
#/sbin/modprobe tmscsim
# UltraStor 14F and 34F support (also see driver below):
#/sbin/modprobe u14-34f
# UltraStor 14F, 24F, and 34F support:
#/sbin/modprobe ultrastor
# Western Digital 7000 SCSI support:
#/sbin/modprobe wd7000

### Mouse support:
# This is a rare type of busmouse that is connected to the back of an
# ATI video card:
#/sbin/modprobe atixlmouse
# Logitech mouse connected to a proprietary interface card. It's
# generally a round connector with 9 pins. Note that the newer mice
# made by Logitech don't use the Logitech protocol anymore; for those,
# you don't need this option:
#/sbin/modprobe busmouse
# Microsoft busmouse support.  These animals (also called Inport mice) are
# connected to an expansion board using a round connector with 9 pins.  Be
# aware that several vendors talk about 'Microsoft busmouse' and actually
# mean PS/2 busmouse -- so count the pins on the connector:
#/sbin/modprobe msbusmouse
# C&T 82C710 mouse port support (as on TI Travelmate):
#/sbin/modprobe qpmouse
# IBM PC110 palmtop digitizer pad:
#/sbin/modprobe pc110pad

# Floppy drive support:
# (Most Linux kernels should already contain this)
#/sbin/modprobe floppy

# Floppy tape support (such as Colorado Jumbo 250 or other QIC-80 drives):
#/sbin/modprobe ftape

# IP masquerading modules:
# These modules are used with IP masquerading, a process which allows you to
# use a Linux box connected to the Internet (via PPP or SLIP, or some other
# means) as a gateway for other Linux, Windows, Macintosh boxes on your local
# network that don't have real IP addresses on the Internet.  The packets
# going through the Linux machine are "masqueraded", or made to look as if
# they're all coming from the one real IP address on the Internet.
#
# As a quick example (for a much more extensive treatment, see the IP-Masquerade
# mini-HOWTO) to allow Internet access to a local network 192.168.11.0 with a
# netmask of 255.255.255.0, you'd use these commands in /etc/rc.d/rc.local:
#
#  # EXTERNAL -> external network interface
#  # INTERNAL -> internal network interface
#  EXTERNAL=eth0
#  INTERNAL=eth1
#  echo 1 > /proc/sys/net/ipv4/ip_forward
#  echo "Setting up NAT (Network Address Translation)..."
#  # by default, nothing is forwarded.
#  iptables -P FORWARD DROP
#  # Allow all connections OUT and only related ones IN
#  iptables -A FORWARD -i $EXTERNAL -o $INTERNAL -m state --state ESTABLISHED,RELATED -j ACCEPT
#  iptables -A FORWARD -i $INTERNAL -o $EXTERNAL -j ACCEPT
#  # enable MASQUERADING
#  iptables -t nat -A POSTROUTING -o $EXTERNAL -j MASQUERADE
#
# Then you'd have to set the other boxes on your local network to use the
# Linux machine as their TCP/IP gateway.  You'll probably also need to plug
# in the IP address for your Internet service provider in each machine's DNS
# setup.
#
# Now, on to the IP masquerading modules.  The example above is good enough
# for most things that use TCP in a relatively simple fashion.  It'll work
# for telnet and http, for instance.  But, the system breaks down when you
# get protocols that use ports in more complicated ways.  Luckily the Linux
# kernel gurus have thought of this and have prepared some modules that
# support masquerading of trickier protocols.  The ipchains command is mighty
# flexible as well, and a lot of things can be made to work just by setting
# that up correctly.
#
# Special modules for iptables. See also "man iptables" for information about
# that powerfull firewall tool.
#
#/sbin/modprobe ipt_conntrack
#/sbin/modprobe ip_conntrack
#/sbin/modprobe ip_conntrack_ftp
#/sbin/modprobe ip_conntrack_irc
#/sbin/modprobe ip_nat_ftp
#/sbin/modprobe ip_nat_irc
#/sbin/modprobe ip_nat_snmp_basic
#
# These modules below are for ipchains (kernel 2.2.x). You can install ipchains
# from /pasture. To use ipchains with newer kernels, you'll need this:
# /sbin/modprobe ipchains
#
#/sbin/modprobe ip_masq_autofw
#/sbin/modprobe ip_masq_cuseeme
#/sbin/modprobe ip_masq_ftp
#/sbin/modprobe ip_masq_irc
#/sbin/modprobe ip_masq_mfw
#/sbin/modprobe ip_masq_portfw
#/sbin/modprobe ip_masq_quake
#/sbin/modprobe ip_masq_raudio
#/sbin/modprobe ip_masq_user
#/sbin/modprobe ip_masq_vdolive
