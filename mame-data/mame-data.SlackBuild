#!/bin/sh
#-- mame-data for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.brg>
# Suggested usage: $ mame-data.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Build requires p7zip

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

NAME=mame-data
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-0.127}
MCVER=${MCVER:-123}
MCWVER=${MCWVER:-123}
MHVER=${MHVER:-127}
MIVER=${MIVER:-0127}
ARCH=noarch
BUILD=${BUILD:-1}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${NAME}-${VERSION}
# Distributable ROM images
SRCARCHIVE0="alienar gridlee robby teetert"

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL0="http://www.mamedev.org/roms"

# Additional data files
SRCARCHIVE10=cheat${MCVER}.7z
SRCARCHIVE11=mamehistory${MHVER}.7z
SRCARCHIVE12=Mameinfo${MIVER}.zip
SRCARCHIVE13=wayder_cheat.zip

DL_URL10="http://cheat.retrogames.com/${SRCARCHIVE10}"
DL_URL11="http://www.arcade-history.com/dats/${SRCARCHIVE11}"
DL_URL12="http://www.mameworld.net/mameinfo/update/${SRCARCHIVE12}"
DL_URL13="http://wayder.hp.infoseek.co.jp/cheat/${SRCARCHIVE13}"

# Samples from http://www.mame.net/downsamples.html
SRCARCHIVE20=sdlmame-samples.tar

SRCARCHIVE30=scanlines_apertures.zip
# Artworks: Robby artwork from http://www.arcadeflyers.com/artwork/robby.zip
SRCARCHIVE31=robby-artwork.zip

#http://www.mameworld.net/mrdo/mame_artwork_supp.html
SRCARCHIVE32="effect_files.zip"

DL_URL30="http://www.mameworld.net/mrdo/mame_art/${SRCARCHIVE30}"

DL_URL32="http://www.mameworld.net/mrdo/mame_art/${SRCARCHIVE32}"

# Icons: Mamu icons from http://www.mameworld.net/icons/pages/mameicons.html
# and converted to png.
#SRCARCHIVE40=icons.zip
SRCARCHIVE40=iconspng.tar.bz2

DL_URL40="http://zemamu.free.fr/${SRCARCHIVE40}"

# if source is not present, download in source rootdir if possible, or in /tmp
for file in ${SRCARCHIVE0} ;do
  if ! test -r ${file}.zip; then
  test -r ${CWD}/${file}.zip || wget ${DL_OPTS} ${DL_URL0}/${file}/${file}.zip || exit 1
  fi
done

if ! test -r ${SRCARCHIVE10}; then
  test -r ${CWD}/${SRCARCHIVE10} || wget ${DL_OPTS} ${DL_URL10} || exit 1
fi
if ! test -r ${SRCARCHIVE11}; then
  test -r ${CWD}/${SRCARCHIVE11} || wget ${DL_OPTS} ${DL_URL11} || exit 1
fi
if ! test -r ${SRCARCHIVE12}; then
  test -r ${CWD}/${SRCARCHIVE12} || wget ${DL_OPTS} ${DL_URL12} || exit 1
fi
if ! test -r ${SRCARCHIVE13}; then
  test -r ${CWD}/${SRCARCHIVE13} || wget ${DL_OPTS} ${DL_URL13} || exit 1
fi

if ! test -r ${SRCARCHIVE30}; then
  test -r ${CWD}/${SRCARCHIVE30} || wget ${DL_OPTS} ${DL_URL30} || exit 1
fi
if ! test -r ${SRCARCHIVE32}; then
  test -r ${CWD}/${SRCARCHIVE32} || wget ${DL_OPTS} ${DL_URL30} || exit 1
fi

if ! test -r ${SRCARCHIVE40}; then
  test -r ${CWD}/${SRCARCHIVE40} || wget ${DL_OPTS} ${DL_URL40} || exit 1
fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

cd ${TMP}
rm -rf ${SRCDIR}
mkdir -p ${SRCDIR} || exit 1
cd ${SRCDIR} || exit 1

zcat ${CWD}/sdlmame-data-README.Fedora.gz > ./README.Fedora || exit 1

# extract ROM readme files
for file in ${SRCARCHIVE0} ;do
  if [ "${file}" == "alienar" ] ; then
    unzip -qa ${CWD}/${file}.zip Aareadme.txt -d . || exit 1
    mv Aareadme.txt README.${file} || exit 1
  elif [ "${file}" != "teetert" ] ; then
    unzip -qa ${CWD}/${file}.zip readme.txt -d . || exit 1
    mv readme.txt README.${file} || exit 1
  fi
done

# extract DAT files
7z x ${CWD}/${SRCARCHIVE10} || exit 1
7z x ${CWD}/${SRCARCHIVE11} || exit 1
unzip -qa ${CWD}/${SRCARCHIVE12} -d . || exit 1
unzip -qa ${CWD}/${SRCARCHIVE13} -d . || exit 1
7z x Mameinfo${MIVER}.exe || exit 1
mv docs mameinfo || exit 1

# fix permissions and line endings
chmod -R u+w,go+r-w,a-s .

chmod 0644 README.* mameinfo/*.txt
chmod 0755 mameinfo
sed -i 's/\r//' cheat.txt mameinfo/*

# zcat ${CWD}/${NAME}.patch.gz | patch -p0 -E --backup --verbose || exit 1

# Install ROMs
mkdir -p ${PKG}/usr/share/mame/roms
for file in ${SRCARCHIVE0} ;do
  install -pm 0644 ${CWD}/${file}.zip \
                   ${PKG}/usr/share/mame/roms/ || exit 1
done

# Install DAT files
install -pm 644 cheat.dat wayder_cheat.dat history.dat mameinfo.dat \
               ${PKG}/usr/share/mame/ || exit 1

# Install Samples
mkdir -p ${PKG}/usr/share/mame/samples
tar --extract --directory ${PKG}/usr/share/mame/samples/ \
    --file ${CWD}/${SRCARCHIVE20} || exit 1

# Install Artwork
mkdir -p ${PKG}/usr/share/mame/artwork
#unzip ${CWD}/${SRCARCHIVE30} -d ${PKG}/usr/share/mame/artwork/
unzip ${CWD}/${SRCARCHIVE32} -d ${PKG}/usr/share/mame/artwork/
install -pm 644 ${CWD}/${SRCARCHIVE31} \
                ${PKG}/usr/share/mame/artwork/robby.zip || exit 1

# Install Icons
mkdir -p ${PKG}/usr/share/mame/icons
tar xvjf ${CWD}/${SRCARCHIVE40}
install -m0644 icons/*.png \
               ${PKG}/usr/share/mame/icons/ || exit 1
#install -pm 644 ${CWD}/${SRCARCHIVE40} \
#                ${PKG}/usr/share/mame/icons/icons.zip || exit 1

# Empty dirs
for file in cab snap ;do
  mkdir -p ${PKG}/usr/share/mame/${file}
  touch ${PKG}/usr/share/mame/${file}/dummy.txt
done

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  cheat.txt mameinfo README.alienar README.gridlee README.robby \
  README.Fedora wayder_cheat.txt ${CWD}/ChangeLog.SB ${DOCDIR}/
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
  mv ${PKG}/usr/share/man ${PKG}/usr/man
  rmdir ${PKG}/usr/share
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
                 ${CWD}/*README.Fedora.gz ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
                 ${SBDIR}/${NAME}.SlackBuild
  sed -i "/^VERSION=/s/:-.*}/:-$VERSION}/
          /^BUILD=/s/:-.*}/:-$BUILD}/
          /^  ARCH=/s/:-.*}/:-$ARCH}/
          " ${SBDIR}/${NAME}.SlackBuild
fi

# Build package:
set +o xtrace        # no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.tgz "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
