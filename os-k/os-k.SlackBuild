#!/bin/sh
#-- OS-K-icon-theme for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.brg>
# Suggested usage: $ OS-K-icon-theme.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.kde-look.org/content/show.php?content=47278

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

CWD=$(pwd)
if [ "${TMP}" = "" ]; then
  TMP=/tmp
fi
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

PNAME=OS-K
NAME=os-k
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-1.15}
ARCH=noarch
BUILD=${BUILD:-1}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${PNAME}
SRCARCHIVE=${PNAME}-${VERSION}.tar.bz2

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
#DL_URL="http://dl.sf.net/sourceforge/${NAME}/${SRCARCHIVE}"
#DL_URL="http://prdownloads.sourceforge.net/${NAME}/${SRCARCHIVE}"
#DL_URL="http://download.sf.net/${NAME}/${SRCARCHIVE}"

# if source is not present, download in source rootdir if possible, or in /tmp
# if ! test -r ${SRCARCHIVE}; then
# 	test -r ${CWD}/${SRCARCHIVE} || wget ${DL_OPTS} ${DL_URL} || exit 1
# fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}/usr/share/icons

( cd ${PKG}/usr/share/icons || exit 1
  tar -xjvf ${CWD}/${SRCARCHIVE} || exit 1
  find . -type d -exec chmod 0755 {} \;
  find . -type f -exec chmod 0644 {} \;
) || exit 1

THEMEDIR=${PKG}/usr/share/icons/${PNAME}

rm -f ${PKG}/usr/share/icons/${PNAME}/*/actions/kmenu*.png || exit 1

# Fix names
for res in 16 22 32 48 56 64 72 96 128 ; do
  ( cd ${THEMEDIR}/${res}x${res}/mimetypes
    for f in Clipping*.png ;do 
      mv "${f}" "$( echo ${f} | sed 's| ||g')"
    done
  ) || exit 1
done

# setting Slackware Logo as kmenu
# backup
for res in 16 22 32 48 56 64 72 96 128 ;do
  dir=${THEMEDIR}/${res}x${res}/apps
  mv ${dir}/kmenu.png ${dir}/kmenu_orig.png || exit 1
done

#links from slack-artwork package
ln -s ../../../hicolor/16x16/apps/slack-logo-icon.png \
      ${THEMEDIR}/16x16/apps/kmenu.png || exit 1
ln -s ../../../hicolor/24x24/apps/slack-logo-icon.png \
      ${THEMEDIR}/22x22/apps/kmenu.png || exit 1
ln -s ../../../hicolor/32x32/apps/slack-logo-icon.png \
      ${THEMEDIR}/32x32/apps/kmenu.png || exit 1
ln -s ../../../hicolor/48x48/apps/slack-logo-icon.png \
      ${THEMEDIR}/48x48/apps/kmenu.png || exit 1
ln -s ../../../hicolor/64x64/apps/slack-logo-icon.png \
      ${THEMEDIR}/56x56/apps/kmenu.png || exit 1
ln -s ../../../hicolor/64x64/apps/slack-logo-icon.png \
      ${THEMEDIR}/64x64/apps/kmenu.png || exit 1
ln -s ../../../hicolor/96x96/apps/slack-logo-icon.png \
      ${THEMEDIR}/72x72/apps/kmenu.png || exit 1
ln -s ../../../hicolor/96x96/apps/slack-logo-icon.png \
      ${THEMEDIR}/96x96/apps/kmenu.png || exit 1
ln -s ../../../hicolor/96x96/apps/slack-logo-icon.png \
      ${THEMEDIR}/128x128/apps/kmenu.png || exit 1

# Fix openoffice.org/broffice.org icons
( cd ${THEMEDIR} || exit 1
  for res in 16 22 32 48 56 64 72 96 128 ; do
    pushd ${res}x${res}/apps
      for file in ooo-*.png ; do
        #ln -s ${file} ${file/ooo/openofficeorg} || exit 1
        ln -s ${file} ${file/ooo/brofficeorg} || exit 1
      done
    popd
    pushd ${res}x${res}/mimetypes
        ln -s kpresenter_kpr.png presentation.png
        ln -s karbon_karbon.png drawing.png
    popd
  done
) || exit 1

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
mv ${THEMEDIR}/{buildset,README} ${DOCDIR}/
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644


mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

# Replicate slackbuild and patches
mkdir -p ${SBDIR}
install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
               ${SBDIR}/
install -m0755 ${CWD}/${NAME}.SlackBuild \
               ${SBDIR}/${NAME}.SlackBuild
sed -i "/^VERSION=/s/:-.*}/:-$VERSION}/
        /^BUILD=/s/:-.*}/:-$BUILD}/
        /^ARCH=/s/:-.*}/:-$ARCH}/
        " ${SBDIR}/${NAME}.SlackBuild

# Build package:
set +o xtrace			# no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.tgz "

if test $UID = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  #if [ -d ${TMP}/${SRCDIR} ]; then
    #rm -rf ${TMP}/${SRCDIR}
    #echo "${TMP}/${SRCDIR} cleanup completed"
  #fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG}
    echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
