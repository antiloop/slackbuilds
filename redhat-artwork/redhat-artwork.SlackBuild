#!/bin/sh
#-- redhat-artwork for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.br>
# Suggested usage: $ redhat-artwork.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.redhat.com

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

CWD=`pwd`
if [ "${TMP}" = "" ]; then
  TMP=/tmp
fi

NAME=redhat-artwork
PKG=${TMP}/package-${NAME}

VERSION=${VERSION:-7.0.0}
ARCH=${ARCH:-i686}
BUILD=${BUILD:-2}
NJOBS=${NJOBS:-2}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${NAME}-${VERSION}
SRCARCHIVE=${SRCDIR}.tar.gz

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL="http://dl.sf.net/sourceforge/${NAME}/${SRCARCHIVE}"
#DL_URL="http://prdownloads.sourceforge.net/${NAME}/${SRCARCHIVE}"
#DL_URL="http://download.sf.net/${NAME}/${SRCARCHIVE}"

if [ "${ARCH}" = "i386" ]; then
  SLKCFLAGS="-O2 -march=i386 -mtune=i686"
elif [ "${ARCH}" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "${ARCH}" = "i686" ]; then
  SLKCFLAGS="-O2 -march=athlon64 -mtune=athlon64 -msse3 -pipe -fomit-frame-pointer"
elif [ "${ARCH}" = "s390" ]; then
  SLKCFLAGS="-O2"
elif [ "${ARCH}" = "x86_64" ]; then
  SLKCFLAGS="-O2"
fi

# if source is not present, download in source rootdir if possible, or in /tmp
# if ! test -r ${SRCARCHIVE}; then
# 	test -r ${CWD}/${SRCARCHIVE} || wget ${DL_OPTS} ${DL_URL} || exit 1
# fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

cd ${TMP}
rm -rf ${SRCDIR}
tar -xzvf ${CWD}/${SRCARCHIVE} || exit 1
cd ${SRCDIR} || exit 1

chmod -R u+w,go+r-w,a-s .

zcat ${CWD}/${NAME}-7.0.0-kdm-userlist.patch.gz | patch -p1 -E --backup --verbose || exit 1
zcat ${CWD}/${NAME}-7.0.0-timed-login.patch.gz | patch -p1 -E --backup --verbose || exit 1
zcat ${CWD}/redhat-artwork-7.0.0-qt.patch.gz | patch -p0 -E --backup --verbose || exit 1

## this is apparently how Qt finds itself.
unset QTDIR
echo "Trying to source qt.sh"
. /etc/profile.d/qt.sh
echo "QTDIR is $QTDIR"
export QTDIR

export LANG=en_US.ISO-8859-1 ## workaround for intltool sucking in UTF-8

CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure \
  --prefix=/usr \
  --sysconfdir=/etc \
  --localstatedir=/var/lib \
  --infodir=/usr/info \
  --mandir=/usr/man \
  --docdir=/usr/doc/${NAME}-${VERSION} \
  --disable-rpath \
  --build=${ARCH}-slackware-linux || exit 1

make -j${NJOBS} || exit 1
make install prefix=${PKG}/usr || exit 1

if [ -d ${PKG}/usr/lib/qt-3.3 ] ;then
  mv ${PKG}/usr/lib/qt-3.3 ${PKG}/usr/lib/qt || exit 1
fi

rm -f ${PKG}/usr/lib/gtk-2.0/*/*.la || exit 1
rm -f ${PKG}/usr/lib/gtk/themes/engines/*.la || exit 1

mkdir -p ${PKG}/etc/gtk-2.0
install -m 0644 gtkrc2-default ${PKG}/etc/gtk-2.0/gtkrc || exit 1

zcat ${CWD}/icon-coverage-linker.py.gz > icon-coverage-linker.py || exit 1
chmod 755 icon-coverage-linker.py
zcat ${CWD}/coverage-tool-links.xml.gz > coverage-tool-links.xml || exit 1

./icon-coverage-linker.py ${PKG}/usr/share/icons/Bluecurve coverage-tool-links.xml

# add a Fedora metatheme
mkdir -p ${PKG}/usr/share/themes/Fedora
zcat ${CWD}/index.theme.gz > ${PKG}/usr/share/themes/Fedora/index.theme || exit 1

# add a Fedora icon theme
for i in 16 24 32 36 48 96; do
  mkdir -p ${PKG}/usr/share/icons/Fedora/${i}x${i}/places
done
zcat ${CWD}/index.theme.icon.gz > ${PKG}/usr/share/icons/Fedora/index.theme || exit 1

# we want to own the icon caches
touch ${PKG}/usr/share/icons/Fedora/icon-theme.cache
touch ${PKG}/usr/share/icons/Bluecurve/icon-theme.cache

# start-here.png gets provided by fedora-logos
rm -f ${PKG}/usr/share/icons/Bluecurve/*/mimetypes/start-here.png

#symlink some icons so we can handle some of the new added icons
#this should be added to our upstream sources

# link upstream icon names to the redhat ones in bluecurve
# FIXME: the ones with -sf need to be removed upstream
for d in 48x48 32x32 24x24 16x16; do
  ( cd ${PKG}/usr/share/icons/Bluecurve/${d}/apps
    ln -s icon-db-user.png openofficeorg-base.png
    ln -s icon-db-user.png brofficeorg-base.png
    ln -s redhat-spreadsheet.png openofficeorg-calc.png
    ln -s redhat-spreadsheet.png brofficeorg-calc.png
    ln -s icon-vector-editor.png openofficeorg-draw.png
    ln -s icon-vector-editor.png brofficeorg-draw.png
    ln -s redhat-presentations.png openofficeorg-impress.png
    ln -s redhat-presentations.png brofficeorg-impress.png
    ln -s icon-calculator.png openofficeorg-math.png
    ln -s icon-calculator.png brofficeorg-math.png
    ln -s redhat-word-processor.png openofficeorg-writer.png
    ln -s redhat-word-processor.png brofficeorg-writer.png
    ln -s redhat-accessories.png gnome-util.png
    ln -sf redhat-programming.png gnome-devel.png
    ln -sf redhat-games.png gnome-joystick.png
    ln -s redhat-graphics.png gnome-graphics.png
    ln -sf redhat-internet.png gnome-globe.png
    ln -sf redhat-sound_video.png gnome-multimedia.png
    ln -sf redhat-office.png gnome-applications.png
    ln -sf redhat-preferences.png gnome-settings.png
    ln -sf redhat-system_settings.png gnome-system.png
  ) || exit 1
done

# We need the Openoffice icons for the menus
for d in 48x48 32x32 24x24 16x16; do
  mkdir -p ${PKG}/usr/share/icons/Fedora/${d}/apps
  srcdir=${PKG}/usr/share/icons/Bluecurve/${d}/apps
  destdir=${PKG}/usr/share/icons/Fedora/${d}/apps
  cp ${srcdir}/*officeorg-base.png ${destdir}/
  cp ${srcdir}/*officeorg-calc.png ${destdir}/
  cp ${srcdir}/*officeorg-draw.png ${destdir}/
  cp ${srcdir}/*officeorg-impress.png ${destdir}/
  cp ${srcdir}/*officeorg-math.png ${destdir}/
  cp ${srcdir}/*officeorg-writer.png ${destdir}/
done

( cd ${PKG}/usr/share/icons/Bluecurve/48x48/filesystems
  ln -s ../mimetypes/fileshare.png gnome-fs-ftp.png
) || exit 1

# link upstream icon names to the redhat ones in bluecurve
for s in 16x16 20x20 24x24 32x32 36x36 48x48 64x64 96x96; do
  ( cd ${PKG}/usr/share/icons/Bluecurve/${s}/apps/
      ln -sf redhat-office.png package_wordprocessing.png
      ln -sf redhat-internet.png package_network.png
      ln -sf redhat-accessories.png package_applications.png
      ln -sf redhat-graphics.png package_graphics.png
      ln -sf redhat-games.png package_games.png
      ln -sf redhat-sound_video.png multimedia.png
      ln -sf redhat-preferences.png package_settings.png
      ln -sf redhat-programming.png package_development.png
      ln -sf redhat-system_tools.png package_utilities.png
      ln -sf redhat-system_settings.png package_system.png
      ln -sf redhat-tools.png package_utilities.png
      # app icons
      ln -sf redhat-email.png kmail.png
      ln -sf redhat-web-browser.png konqueror.png
      ln -sf redhat-filemanager.png kfm.png
      ln -sf redhat-home.png kfm_home.png
      ln -sf redhat-logviewer.png kviewshell.png
      ln -sf system-logviewer.png logviewer.png
      # system settings
      ln -sf system-config-soundcard.png multimedia.png
    ) || exit 1
done

function flip_icon () {
  pngtopnm ${1}.png > ${1}.rgb
  pngtopnm -alpha ${1}.png > ${1}.alpha
  pamstack ${1}.rgb ${1}.alpha > ${1}.pam
  pamflip -lr ${1}.pam > ${2}.pam
  pamrgbatopng ${2}.pam > ${2}.png
  rm -f ${1}.rgb ${1}.alpha ${1}.pam ${2}.pam
}

function ln_icon () {
  if [ -f ${1}.png ]; then
    ln -s ${1}.png ${2}.png
  fi
  if [ -f ${1}.icon ]; then
    ln -s ${1}.icon ${2}.icon
  fi
  if [ -f ${1}.svg ]; then
    ln -s ${1}.svg ${2}.svg
  fi
}

# link gtk stock icon names to bluecurve ones
( cd ${PKG}/usr/share/icons/Bluecurve/
  for s in 16x16 24x24 36x36 48x48; do
    if pushd ${s}/filesystems/ >&/dev/null; then
      ln_icon gnome-fs-directory gtk-directory
      ln_icon gnome-fs-network gtk-network
      popd
    fi
    if pushd ${s}/mimetypes/ >&/dev/null; then
      ln_icon file-container gtk-file
      ln_icon harddrive gtk-harddisk
      popd
    fi
    if pushd ${s}/stock/ >&/dev/null; then
      ln_icon stock-about gtk-about
      ln_icon stock-connect gtk-connect
      ln_icon stock-disconnect gtk-disconnect
      ln_icon stock-edit gtk-edit
      ln_icon stock-media-ffwd gtk-media-forward-ltr
      ln_icon stock-media-rewind gtk-media-forward-rtl
      ln_icon stock-media-next gtk-media-next-ltr
      ln_icon stock-media-prev gtk-media-next-rtl
      ln_icon stock-media-pause gtk-media-pause
      ln_icon stock-media-play gtk-media-play-ltr
      ln_icon stock-media-prev gtk-media-previous-ltr
      ln_icon stock-media-next gtk-media-previous-rtl
      ln_icon stock-media-rec gtk-media-record
      ln_icon stock-media-rewind gtk-media-rewind-ltr
      ln_icon stock-media-ffwd gtk-media-rewind-rtl
      ln_icon stock-media-stop gtk-media-stop
      ln_icon stock-undo gtk-undo-ltr
      ln_icon stock-redo gtk-redo-ltr
      ln_icon stock-font gtk-select-font
#       flip_icon stock-media-play gtk-media-play-rtl
#       flip_icon stock-undo gtk-undo-rtl
#       flip_icon stock-redo gtk-redo-rtl
      popd
    fi
  done
  pushd 48x48/stock/ >&/dev/null || continue
    ln_icon stock-lockscreen gtk-dialog-authentication
  popd
) || exit 1

# link icon-naming spec names to bluecurve ones
( cd ${PKG}/usr/share/icons/Bluecurve/
  for s in 16x16 20x20 24x24 32x32 36x36 48x48 64x64 96x96; do
    if pushd ${s}/filesystems/ >&/dev/null; then
      ln_icon gnome-fs-trash-empty user-trash
      ln_icon gnome-fs-trash-full user-trash-full
      popd
    fi
    if pushd ${s}/stock/ >&/dev/null; then
      ln_icon stock-properties document-properties
      ln_icon stock-find-and-replace edit-find-and-replace
      ln_icon stock-undo edit-undo
      ln_icon stock-justify-center format-justify-center
      ln_icon stock-justify-fill format-justify-fill
      ln_icon stock-justify-left format-justify-left
      ln_icon stock-justify-right format-justify-right
      ln_icon stock-strikethrough format-text-strikethrough
      ln_icon stock-underline format-text-underline
      ln_icon stock-goto-bottom go-bottom
      ln_icon stock-go-down go-down
      ln_icon stock-goto-first go-first
      ln_icon stock-goto-last go-last
      ln_icon stock-jump-to go-jump
      ln_icon stock-go-forward go-next
      ln_icon stock-go-back go-previous
      ln_icon stock-go-up go-up
      ln_icon stock-goto-top go-top
      ln_icon stock-zoom-fit zoom-best-fit
      ln_icon stock-quit system-log-out
      ln_icon stock-quit application-exit
      ln_icon stock-apply dialog-ok
      ln_icon stock-close dialog-close
      ln_icon stock-cancel dialog-cancel
      ln_icon stock-bookmark-page bookmark-new
      ln_icon stock-new document-new
      ln_icon stock-open document-open
      ln_icon stock-open document-open-recent
      ln_icon stock-print document-print
      ln_icon stock-print-preview document-print-preview
      ln_icon stock-save document-save
      ln_icon stock-save-as document-save-as
      ln_icon stock-copy edit-copy
      ln_icon stock-cut edit-cut
      ln_icon stock-delete edit-delete
      ln_icon stock-paste edit-paste
      ln_icon stock-bold format-text-bold
      ln_icon stock-italic format-text-italic
      ln_icon stock-mic audio-input-microphone
      ln_icon stock-about help-about
      ln_icon stock-book help-contents
      ln_icon stock-missing-image image-missing
      ln_icon stock-media-pause media-playback-pause
      ln_icon stock-media-play media-playback-start
      ln_icon stock-media-stop media-playback-stop
      ln_icon stock-media-rec media-record
      ln_icon stock-media-rewind media-seek-backward
      ln_icon stock-media-ffwd media-seek-forward
      ln_icon stock-media-prev media-skip-backward
      ln_icon stock-media-next media-skip-forward
      popd
    fi
    if pushd ${s}/mimetypes/ >&/dev/null; then
      ln_icon harddrive drive-harddisk
      ln_icon cd drive-removable-media
      ln_icon cd drive-optical
      ln_icon floppy media-floppy
      ln_icon cd media-optical
      ln_icon dvd media-flash
      ln_icon folder-home user-home
      ln_icon file-font font-x-generic
      ln_icon file-gfx image-x-generic
      ln_icon file-video video-x-generic
      ln_icon file text-x-generic
      ln_icon file text-x-generic-template
      ln_icon file-executable text-x-script
      ln_icon file-launcher application-x-executable
      ln_icon file-wordprocessor x-office-document
      ln_icon file-presentation x-office-presentation
      ln_icon file-spreadsheet x-office-spreadsheet
      # FIXME
      ln_icon file-wordprocessor x-office-calendar
      ln_icon file-wordprocessor x-office-address-book
      popd
    fi
    if pushd ${s}/apps/ >&/dev/null; then
      ln_icon icon-calculator accessories-calculator
      ln_icon icon-character-map accessories-character-map
      ln_icon icon-documentation accessories-dictionary
      ln_icon icon-notepad accessories-text-editor
      ln_icon icon-accessories applications-accessories
      ln_icon icon-development applications-development
      ln_icon icon-games applications-games
      ln_icon icon-help help-browser
      ln_icon icon-help system-help
      ln_icon icon-gfx applications-graphics
      ln_icon icon-network applications-internet
      ln_icon icon-media applications-multimedia
      ln_icon icon-office applications-office
      ln_icon icon-system-configuration applications-system
      ln_icon icon-computer computer
      ln_icon icon-system-settings preferences-desktop
      ln_icon icon-accessibility preferences-desktop-accessibility
      ln_icon icon-fonts preferences-desktop-font
      ln_icon icon-keyboard preferences-desktop-keyboard
      ln_icon icon-languages preferences-desktop-locale
      ln_icon icon-sound preferences-desktop-multimedia
      # preferences-desktop-peripherals
      ln_icon icon-user preferences-desktop-personal
      # preferences-desktop-screensaver
      ln_icon icon-themes preferences-desktop-theme
      ln_icon icon-background-picture preferences-desktop-wallpaper
      ln_icon icon-system-configuration preferences-system
      ln_icon icon-network preferences-system-network
      ln_icon gpm-primary-80 battery
      ln_icon gpm-primary-20 battery-caution
      ln_icon gpm-primary-10 battery-low
      ln_icon camera camera-photo
      ln_icon icon-games input-gaming
      ln_icon icon-keyboard input-keyboard
      ln_icon icon-mouse input-mouse
      ln_icon icon-systemhealth utilities-system-monitor
      popd
    fi
    if pushd ${s}/mimetypes/ >&/dev/null; then
      ln_icon stock_insert_image insert-image
      ln_icon stock_insert_url insert-link
      ln_icon stock_insert_ole-object insert-object
      popd
    fi
  done
  # some 48 only icons
  if pushd 48x48/stock/ >&/dev/null; then
    ln_icon stock-lockscreen dialog-password
    ln_icon dialog-info dialog-information
  fi
) || exit 1

# save some space
( cd ${PKG}/usr/share/apps/kdm/themes/FedoraFlyingHigh
  rm -f background.jpg
  ln -s ../../../../gdm/themes/FedoraFlyingHigh/background.jpg .
) || exit 1

# color scheme for FedoraFlyingHigh
zcat ${CWD}/FedoraFlyingHigh.kcsrc.gz > \
     ${PKG}/usr/share/apps/kdisplay/color-schemes/FedoraFlyingHigh.kcsrc || exit 1

# Fix cursors
for dir in {,L}Bluecurve{,-inverse} ; do
  ( cd ${PKG}/usr/share/icons/${dir}/cursors
    ln -s sb_h_double_arrow 14fef782d02440884392942c11205230
    ln -s hand1 9d800788f1b08800ae810202380a0822
    ln -s hand2 e29285e634086352946a0e7090d73106
    ln -s cross 03b6e0fcb3499374a867c041f52298f0
    ln -s left_ptr 4498f0e0c1937ffe01fd06f973665830
    ln -s left_ptr_watch 3ecb610c1bf2410f44200f48c40d3599
    ln -s top_right_corner fcf1c3c7cd4491d801f1e1c78f100000
    ln -s plus 6407b0e94181790501fd1e167b474872
    ln -s left_ptr 9081237383d90e509aa00f00170e968f
    ln -s sb_h_double_arrow 028006030e0e7ebffc7f7070c0600140
    ln -s top_left_corner c7088f0f3e6c8088236ef8e1e3e70000
    ln -s sb_v_double_arrow 2870a09082c103050810ffdffffe0204
    ln -s question_arrow d9ce0ab605698f320427677b458ad60b
    ln -s double_arrow 00008160000006810000408080010102
  ) || exit 1
done

for dir in {,L}Bluecurve-inverse ; do
  ( cd ${PKG}/usr/share/icons/${dir}/cursors
    ln -s question_arrow 5c6cd98b3f3ebcb1f9c7f1c204630408
  ) || exit 1
done

zcat ${CWD}/link.png.gz > \
     ${PKG}/usr/share/icons/Bluecurve/96x96/filesystems/link.png || exit 1
for s in 16x16 24x24 32x32 36x36 48x48 ; do
  src=${PKG}/usr/share/icons/Bluecurve/96x96/filesystems/link.png
  dir=${PKG}/usr/share/icons/Bluecurve/${s}/filesystems
  convert ${src} -depth 8 -filter Lanczos -resize ${s} \
          ${dir}/link.png || exit 1
done

( cd ${PKG}/usr/share/icons/Bluecurve/20x20/apps
  for icon in filemanager email web-browser logbook sound accessories development \
              games gfx network system-settings system-configuration configuration \
              office ; do
    convert ../../48x48/apps/icon-${icon}.png -depth 8 -filter Lanczos \
            -resize 20x20 icon-${icon}.png
  done
  convert ../../48x48/mimetypes/folder-home.png -depth 8 -filter Lanczos \
          -resize 20x20 folder-home.png

  ln -s icon-filemanager.png redhat-filemanager.png
  ln -s folder-home.png redhat-home.png
  ln -s icon-email.png redhat-email.png
  ln -s icon-web-browser.png redhat-web-browser.png
  ln -s icon-logbook.png redhat-logviewer.png
  ln -s icon-logbook.png system-logviewer.png
  ln -s icon-sound.png system-config-soundcard.png
  ln -s icon-accessories.png redhat-accessories.png
  ln -s icon-development.png redhat-programming.png
  ln -s icon-games.png redhat-games.png
  ln -s icon-gfx.png redhat-graphics.png
  ln -s icon-network.png redhat-internet.png
  ln -s icon-system-settings.png redhat-preferences.png
  ln -s icon-system-settings.png redhat-system_settings.png
  ln -s icon-system-configuration.png redhat-tools.png
  ln -s icon-office.png redhat-office.png
) || exit 1

for s in 32x32 36x36 ; do
  ( cd ${PKG}/usr/share/icons/Bluecurve/${s}/apps
    convert ../../48x48/mimetypes/folder-home.png -depth 8 -filter Lanczos \
          -resize ${s} ../mimetypes/folder-home.png
    ln -s ../mimetypes/folder-home.png redhat-home.png
  ) || exit 1
done

# Delete broken links
for s in 32x32 36x36 64x64 96x96; do
  find -L ${PKG}/usr/share/icons/Bluecurve/${s}/apps -type l -delete
done

for d in 96x96 48x48 24x24 16x16; do
  ( cd ${PKG}/usr/share/icons/Bluecurve/${d}/apps
    ln -sf ../../../hicolor/${d}/apps/slack-logo-icon.png start-here.png
    ln -sf ../../../hicolor/${d}/apps/slack-logo-icon.png redhat-starthere.png

    cd ${PKG}/usr/share/icons/Bluecurve/${d}/mimetypes
    ln -sf ../../../hicolor/${d}/apps/slack-logo-icon.png gnome-starthere.png
  ) || exit 1
done

# Fix openoffice.org/broffice.org icons
for s in 16x16 24x24 48x48 96x96 ; do
  ( cd ${PKG}/usr/share/icons/Bluecurve/${s}/mimetypes
    for file in openofficeorg-drawing*.png ; do
      ln -s file-vector_art.png ${file/openofficeorg/brofficeorg}
    done
    for file in openofficeorg-oasis-master-*.png openofficeorg-{oasis-,}text*.png ; do
      ln -s file-wordprocessor.png ${file/openofficeorg/brofficeorg}
    done
    for file in openofficeorg-{oasis-,}presentation*.png ; do
      ln -s file-presentation.png  ${file/openofficeorg/brofficeorg}
    done
    for file in openofficeorg-{oasis-,}spreadsheet*.png ; do
      ln -s file-spreadsheet.png ${file/openofficeorg/brofficeorg}
    done
    ln -s file-vector_art.png drawing.png
    ln -s file-presentation.png presentation.png
    # KOffice icons
    ln -s file-vector_art.png karbon_karbon.png
    ln -s file-presentation.png kpresenter_kpr.png
    ln -s file-wordprocessor.png kword_kwd.png
    ln -s file-spreadsheet.png kspread_ksp.png
  ) || exit 1
done

( cd ${PKG}
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip --strip-debug 2> /dev/null
)

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  NEWS ChangeLog README COPYING ${CWD}/kdmrc.bluecurve.gz ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
zcat ${CWD}/kdmrc.bluecurve.gz > ${DOCDIR}/kdmrc.bluecurve

find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
    mv ${PKG}/usr/share/man ${PKG}/usr/man
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm ${eachpage}
        done
        gzip -9 *.?
      )
    done
  )
fi

# Compress info pages, if any:
if [ -d ${PKG}/usr/info ]; then
  ( cd ${PKG}/usr/info
      rm -f dir
      gzip -9 *
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

# Replicate slackbuild and patches
mkdir -p ${SBDIR}
install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
               ${CWD}/${NAME}-*.patch.gz ${CWD}/FedoraFlyingHigh.kcsrc.gz \
               ${CWD}/index.theme*.gz ${CWD}/kdmrc.*.gz ${SBDIR}/
install -m0755 ${CWD}/${NAME}.SlackBuild \
               ${SBDIR}/${NAME}.SlackBuild
sed -i "/^VERSION=/s/:-.*}/:-$VERSION}/
        /^BUILD=/s/:-.*}/:-$BUILD}/
        /^ARCH=/s/:-.*}/:-$ARCH}/
        " ${SBDIR}/${NAME}.SlackBuild

# Build package:
set +o xtrace			# no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.tgz "

if test $UID = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR}
    echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  rm -rf ${PKG}
  echo "Cleanup completed"
fi
