#!/bin/sh
#-- rocksndiamonds-levels for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.br>
# Suggested usage: $ rocksndiamonds-levels.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.artsoft.org/rocksndiamonds/

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

PNAME=rocksndiamonds
NAME=${PNAME}-levels
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-3.2.4}
ARCH=noarch
SLKTARGET=${SLKTARGET:-i486}
BUILD=${BUILD:-1}
NJOBS=${NJOBS:-2}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

DATE=$(LC_ALL=C date +%d-%b-%Y)

LVLDIR=${PKG}/usr/share/${PNAME}
LVLDOWNDIR=${CWD}/levels

SRCARCHIVES="rockslevels-sp-1.0.tar.gz rockslevels-dx-1.0.tar.gz"
SRCARCHIVES2="Contributions-1.2.0.7z Emerald_Mine_Club-2.0.0.7z Sokoban-1.0.0.7z"
SRCARCHIVES3="BD2K3-1.0.0.zip Boulder_Dash_Dream-1.0.0.zip Snake_Bite-1.0.0.zip Zelda-1.0.0.zip ZeldaII-1.0.0.zip"
SRCARCHIVE4=rnd_jue-v8.zip

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL="http://www.artsoft.org/RELEASES/unix/${PNAME}/levels"
DL_URL2="http://www.artsoft.org/RELEASES/${PNAME}/levels"
DL_URL4="http://www.jb-line.de/hp/${SRCARCHIVE4}"

mkdir -p ${LVLDOWNDIR}
for file in ${SRCARCHIVES} ;do
  if ! test -r ${file}; then
   test -r ${LVLDOWNDIR}/${file} || wget -P ${LVLDOWNDIR} ${DL_OPTS} ${DL_URL}/${file} || exit 1
  fi
done
for file in ${SRCARCHIVES2} ${SRCARCHIVES3} ;do
  if ! test -r ${file}; then
   test -r ${LVLDOWNDIR}/${file} || wget -P ${LVLDOWNDIR} ${DL_OPTS} ${DL_URL2}/${file} || exit 1
  fi
done
if ! test -r ${SRCARCHIVE4}; then
  test -r ${LVLDOWNDIR}/${SRCARCHIVE4} || wget -P ${LVLDOWNDIR} ${DL_OPTS} ${DL_URL4} || exit 1
fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

mkdir -p ${LVLDIR}
( cd ${LVLDIR} || exit 1
  for file in ${SRCARCHIVES} ;do
    tar -xvf ${LVLDOWNDIR}/${file} || exit 1
  done
) || exit 1

( cd ${LVLDIR}/levels || exit 1
  for file in ${SRCARCHIVES2} ;do
    7z x ${LVLDOWNDIR}/${file} || exit 1
  done
  for file in ${SRCARCHIVES3} ;do
    unzip ${LVLDOWNDIR}/${file} || exit 1
  done
  unzip ${LVLDOWNDIR}/${SRCARCHIVE4} 2>/dev/null ||:
) || exit 1

find ${LVLDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${LVLDIR}/ -type f -print0 | xargs -0 chmod 0644
find ${LVLDIR}/ -type f -name 'levelinfo.conf' -print0 | xargs -0 sed -e 's/\r//' -i

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
                 ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
                 ${SBDIR}/${NAME}.SlackBuild
  sed -i "/^VERSION=/s/:-.*}/:-$VERSION}/
          /^BUILD=/s/:-.*}/:-$BUILD}/
          /^ARCH=/s/:-.*}/:-$ARCH}/
          " ${SBDIR}/${NAME}.SlackBuild
fi

# Build package:
set +o xtrace        # no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.tgz "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
