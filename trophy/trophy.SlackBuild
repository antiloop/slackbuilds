#!/bin/sh
#-- trophy for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.brg>
# Suggested usage: $ trophy.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

TMP=/tmp
CWD=`pwd`

PACKAGER="Phantom X"

NAME=trophy
PKG=$TMP/package-$NAME

VERSION=1.1.3
ARCH=${ARCH:-i686}
BUILD=${BUILD:-1xinc}
DOCDIR=$PKG/usr/doc/$NAME-$VERSION
SBDIR=$PKG/usr/src/slackbuilds/$NAME
PKGNAME=$NAME-$(echo ${VERSION} | tr - . )-$ARCH-$BUILD

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=$NAME-${VERSION}-src
SRCARCHIVE=${SRCDIR}.tar.bz2
DL_URL="--timeout=5 http://dl.sf.net/sourceforge/$NAME/$SRCARCHIVE"

if [ "$ARCH" = "i386" ]; then
  SLKCFLAGS="-O2 -march=i386 -mtune=i686"
elif [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O3 -march=athlon64 -mtune=athlon64 -msse3"
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2"
fi

# if source is not present, download in source rootdir if possible, or in /tmp
if ! test -r $SRCARCHIVE; then
  test -r $CWD/$SRCARCHIVE || wget $DL_URL
fi

if [ -d $PKG ]; then
  # Clean up a previous build
  rm -rf $PKG
fi
mkdir -p $PKG
cd $TMP
rm -rf ${SRCDIR}
tar xjvf $CWD/$SRCARCHIVE || exit 1
cd ${SRCDIR} || exit 1

zcat $CWD/$NAME-$VERSION.patch.gz | patch -p1 --verbose || exit 1

sed -i -e "s|resources/|/usr/share/trophy/resources/|g" $NAME/resources.scr

zcat $CWD/doxy.cfg.gz > trophy/doxy.cfg
find . -name .cvsignore -print0 | xargs -0 rm -f

find . -perm 777 -exec chmod 755 {} \;
find . -perm 666 -exec chmod 644 {} \;
find . -perm 664 -exec chmod 644 {} \;
find . -perm 444 -exec chmod 644 {} \;

cd $NAME
rm -f $NAME
autoconf
export CFLAGS="$SLKCFLAGS"
export CXXFLAGS="$SLKCFLAGS"
./configure \
  --prefix=/usr \
  --sysconfdir=/etc \
  --localstatedir=/var/lib \
  --infodir=/usr/info \
  --mandir=/usr/man \
  --docdir=/usr/doc/$NAME-${VERSION} \
  --build=$ARCH-slackware-linux

make -j4 || exit 1
make install DESTDIR=$PKG || exit 1

cd ..

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

mkdir -p $PKG/usr/share/applications
cat > $PKG/usr/share/applications/$NAME.desktop <<EOF
[Desktop Entry]
Encoding=UTF-8
Name=Trophy
GenericName=Arcade Game
Exec=trophy
Terminal=false
Icon=trophy.png
Type=Application
Categories=Game;ArcadeGame;
EOF

mkdir -p $PKG/usr/share/pixmaps/

convert trophy/resources/cars/flash2/surface3d.tga -resize 48 \
        $PKG/usr/share/pixmaps/trophy.png


mkdir -p $DOCDIR
cp -a \
  AUTHORS COPYING ChangeLog ChangeLog.old README TODO trophy/doc/html \
  $DOCDIR/
find $DOCDIR/ -type d | xargs chmod 755
find $DOCDIR/ -type f | xargs chmod 644
find $PKG/usr/man -type f -exec gzip -9 {} \;
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-required > $PKG/install/slack-required

sed -i "s|_PACKAGER|$PACKAGER|g; s|_BUILD_DATE|$DATE|g"\
       $PKG/install/slack-desc

# Replicate slackbuild and patches
mkdir -p $SBDIR
install -m644 $CWD/slack-desc $CWD/slack-required $CWD/$NAME-*.patch.gz\
              $CWD/doxy.cfg.gz $SBDIR/
install -m755 $CWD/$NAME.SlackBuild \
              $SBDIR/$NAME.SlackBuild

# Build package:
set +o xtrace			# no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd $PKG ;
  /bin/chown --recursive root:root .  ;"
# `chgrp bin' is abolished from Slack 11 on
read SLACK SLACKVER < /etc/slackware-version
if test ${SLACKVER%%.*} -lt 11
then ROOTCOMMANDS="$ROOTCOMMANDS
	/usr/bin/find . -type d '(' -name bin -or -name sbin ')'	\
		-exec /bin/chgrp --recursive bin {} ';'  ;"
fi
ROOTCOMMANDS="$ROOTCOMMANDS
  /sbin/makepkg --linkadd y --chown n $CWD/$PKGNAME.tgz "

if test $UID = 0; then
  eval $ROOTCOMMANDS
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo $ROOTCOMMANDS | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "$ROOTCOMMANDS"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/${SRCDIR}
  rm -rf $PKG
fi
