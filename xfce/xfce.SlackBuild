#!/bin/sh
#-- xfce for Slackware --
# Heavily based on the Slackware 11.0 SlackBuild
# http://www.xfce.org/index.php

# Build script by Phantom X <megaphantomx@bol.com.br>
# Suggested usage: $ xfce.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.

# Copyright 2003  Slackware Linux, Inc., Concord, CA, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.xfce.org

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set YES for native build with gcc >= 4.2
SB_NATIVE=${SB_NATIVE:-NO}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}

NAME=xfce

TMPD=${TMP}/${NAME}-build-dir
if [ ! -d ${TMPD} ]; then
  mkdir -p ${TMPD}
fi
PKG=${PKG:-${TMPD}/package-${NAME}}

PKGVER=${PKGVER:-4.4.2}
VERSION=${VERSION:-4.4.2}
SLKDIST=${SLKDIST:-Slackware}
VERSIONO=${VERSIONO:-4.4.0.1}
GXEVER=${GXEVER:-2.4.2}
THUVER=${THUVER:-0.9.0}
EXOVER=${EXOVER:-0.3.4}
MPVER=${MPVER:-0.2.13}
TERMVER=${TERMVER:-0.2.8}
if [ "${SB_NATIVE}" = "YES" ] ;then
  ARCH=${ARCH:-$(uname -m)}
else
  ARCH=${ARCH:-i686}
fi
SLKTARGET=${SLKTARGET:-i486}
BUILD=${BUILD:-5}
NJOBS=${NJOBS:-2}
DOCDIR=${PKG}/usr/doc
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGNAME=${NAME}-$(echo ${PKGVER} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

# Set to YES to enable hal support
SB_HAL=${SB_HAL:-NO}
# Set to YES to enable support for slack-artwork
SB_SLKART=${SB_SLKART:-NO}

DATE=$(LC_ALL=C date +%d-%b-%Y)

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL="http://www.xfce.org/archive/${NAME}-${VERSION}/src"

if [ "${SB_NATIVE}" = "YES" ] ;then
  SLKCFLAGS="-O2 -march=native -mtune=native ${SB_ECFLAGS} -pipe"
else
  case "${ARCH}" in
    i[3-6]86)    SLKCFLAGS="-O2 -march=${ARCH} -mtune=i686"
                 ;;
    s390)        SLKCFLAGS="-O2"
                 ;;
    x86_64)      SLKCFLAGS="-O2 -fPIC"
                 ;;
  esac
fi

if [ -d ${TMPD} ]; then
  # Clean up a previous build
  rm -rf ${TMPD}
fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

# Kludge factor ahead
mkdir -p ${PKG}/usr/man ${PKG}/usr/share ${PKG}/usr/doc
( cd ${PKG}/usr/share ; ln -sf ../man . ; ln -sf ../doc . )

if [ "${SB_HAL}" = "YES" ] ;then
  SB_HALOPTS="hal"
else
  SB_HALOPTS="none"
fi

for file in \
libxfce4util-${VERSION}.tar.bz2 \
libxfcegui4-${VERSION}.tar.bz2 \
libxfce4mcs-${VERSION}.tar.bz2 \
xfce-mcs-manager-${VERSION}.tar.bz2 \
xfce4-panel-${VERSION}.tar.bz2 \
gtk-xfce-engine-${GXEVER}.tar.bz2 \
exo-${EXOVER}.tar.bz2 \
Thunar-${THUVER}.tar.bz2 \
xfce-mcs-plugins-${VERSION}.tar.bz2 \
xfce-utils-${VERSION}.tar.bz2 \
xfce4-appfinder-${VERSION}.tar.bz2 \
xfce4-dev-tools-${VERSIONO}.tar.bz2 \
xfce4-icon-theme-${VERSION}.tar.bz2 \
xfce4-mixer-${VERSION}.tar.bz2 \
xfce4-session-${VERSION}.tar.bz2 \
xfdesktop-${VERSION}.tar.bz2 \
xfprint-${VERSION}.tar.bz2 \
xfwm4-${VERSION}.tar.bz2 \
xfwm4-themes-${VERSION}.tar.bz2 \
mousepad-${MPVER}.tar.bz2 \
orage-${VERSION}.tar.bz2 \
Terminal-${TERMVER}.tar.bz2 \
; do
  ( # if source is not present, download in source rootdir if possible, or in /tmp
    mkdir -p ${CWD}/src
    test -r ${CWD}/src/${file} || wget -P ${CWD}/src ${DL_OPTS} ${DL_URL}/${file} || exit 1
    BASENAME=$(basename ${file} .tar.bz2)
    cd ${TMPD} || exit 1
    echo "+===========================+"
    echo "| ${BASENAME} |"
    echo "+===========================+"
    rm -rf ${BASENAME}
    tar -xjf ${CWD}/src/${file} || exit 1
    
    cd ${BASENAME} || exit 1

    SB_EXNJOBS=${NJOBS}
    
    if [ -r ${CWD}/apply-patches.sh ]; then
      . ${CWD}/apply-patches.sh || exit 1
    fi

    if [ "${file}" = "xfdesktop-${VERSION}.tar.bz2" ]; then
      # Fix for wine directory.
      sed -i -e 's|WINE|wine|g;
                /<category name="Wine"/s|$|\n\t<category name="X-Wine" replace="Wine" toplevel="true" builtin-icon="wine" />|g' \
                modules/menu/xfce-registered-categories.xml*
    fi
    if [ "${file}" = "Thunar-${THUVER}.tar.bz2" ]; then
      SB_EXTRAOPT="--with-volume-manager=${SB_HALOPTS} --disable-gnome-thumbnailers"
    fi
    if [ "${file}" = "xfce4-mixer-${VERSION}.tar.bz2" ]; then
      SB_EXTRAOPT="--with-sound=alsa"
      SB_EXNJOBS=1
    fi

    chmod -R u+w,go+r-w,a-s .

    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${PKG}/usr/lib

    CFLAGS="${SLKCFLAGS}" \
    CXXFLAGS="${SLKCFLAGS}" \
    LDFLAGS="-L${PKG}/usr/lib ${LDFLAGS} " \
    CPPFLAGS="-I${PKG}/usr/include -I${PKG}/usr/include/xfce4 -I${PKG}/usr/include/exo-0.3 -I${PKG}/usr/include/thunar-vfs-1 -I${PKG}/usr/include/thunarx-1 ${CPPFLAGS}" \
    PKG_CONFIG_PATH="${PKG}/usr/lib/pkgconfig" \
    ./configure \
      --prefix=/usr \
      --sysconfdir=/etc/xfce \
      --enable-compositor \
      --disable-rpath \
      --enable-static=no \
      --enable-xinerama ${SB_EXTRAOPT} \
      --with-html-dir=/usr/doc/${BASENAME} \
      --build=${SLKTARGET}-slackware-linux || exit 1

    unset SB_EXTRAOPT  # -j >1 brokes some things
    make || exit 1

    make install DESTDIR=${PKG} || exit 1
    find ${PKG}/usr/lib -name "*.la" |xargs rm -f
    mkdir -p ${DOCDIR}/${BASENAME}
    cp -a \
      AUTHORS BUGS COMPOSITOR COPYING COPYING.LIB COPYING_LIBS FAQ HACKING NEWS \
      NOTES README README.Kiosk README.Plugins THANKS TODO example.gtkrc-2.0 \
      ${DOCDIR}/${BASENAME} 2> /dev/null || exit 0
    ) || exit 1
done

( cd ${PKG}
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip --strip-debug 2> /dev/null
)

if [ "${SB_SLKART}" = "YES" ] ;then
  rm -f ${PKG}/etc/xfce/xdg/xfce4/panel/xfce4-menu-5.rc
  rm -f ${PKG}/etc/xfce/xdg/xfce4-session/xfce4-splash.rc
  rm -f ${PKG}/etc/xfce/xdg/xfce4/mcs_settings/desktop.xml
fi

( cd ${PKG}/etc/xfce/xdg/xfce4
  for f in panel/* mcs_settings/* xfce4-session/* ;do
    mv ${f} ${f}.new
  fi
)

sed -i -e '/^Hidden=/s|=.*|=true|g' \
           ${PKG}/etc/xfce/xdg/autostart/xfce4-tips-autostart.desktop || exit 1

desktop-file-install --delete-original --vendor="" \
  --dir ${PKG}/usr/share/applications  \
  --remove-category="Application"  \
  --remove-category="Utility"  \
  ${PKG}/usr/share/applications/Thunar.desktop

desktop-file-install --delete-original --vendor="" \
  --dir ${PKG}/usr/share/applications  \
  --add-category="Utility"  \
  --add-only-show-in="XFCE" \
  ${PKG}/usr/share/applications/xfcalendar.desktop

mkdir -p ${PKG}/usr/share/xsessions
zcat ${CWD}/xfce4.desktop.gz > \
     ${PKG}/usr/share/xsessions/xfce4.desktop || exit 1

( mkdir -p ${PKG}/etc/X11/xinit
  cd ${PKG}/etc/X11/xinit
  ln -sf ../../xfce/xdg/xfce4/xinitrc xinitrc.xfce
  chmod 755 ../../xfce/xdg/xfce4/xinitrc
) || exit 1

mkdir -p ${PKG}/etc/profile.d
install -m0755 ${CWD}/profile.d/xfce.*sh \
               ${PKG}/etc/profile.d/
chmod 0755 ${PKG}/etc/profile.d/xfce.*

# Le kludge r'mvoal
( cd ${PKG}/usr/share ; rm -f doc man )
find ${DOCDIR} -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR} -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

cat > ${PKG}/install/doinst.sh <<EOF
# Figure out our root directory
ROOTDIR=\$(pwd)
unset CHROOT
if test "\${ROOTDIR}" != "/"; then
  CHROOT="chroot \${ROOTDIR} "
  ROOTDIR="\${ROOTDIR}/"
fi
if [ -x usr/bin/update-desktop-database ]; then
  \${CHROOT} /usr/bin/update-desktop-database 1> /dev/null 2> /dev/null
fi
if [ -x usr/bin/gtk-update-icon-cache ]; then
  \${CHROOT} /usr/bin/gtk-update-icon-cache -q usr/share/icons/hicolor > /dev/null 2>&1
fi
config() {
  NEW="\$1"
  OLD="\$(dirname \$NEW)/\$(basename \$NEW .new)"
  # If there's no config file by that name, mv it over:
  if [ ! -r \$OLD ]; then
    mv \$NEW \$OLD
  elif [ "\$(cat \$OLD | md5sum)" = "\$(cat \$NEW | md5sum)" ]; then # toss the redundant copy
    rm \$NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}
## List of conf files to check.  The conf files in your package should end in .new
EOF

( cd ${PKG}
  find etc/ -name *.new -exec echo config {} ';' | sort >> ${PKG}/install/doinst.sh
  echo >> ${PKG}/install/doinst.sh
)

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

# Replicate slackbuild and patches
if [ "${SB_REP}" = "YES" ] ;then
  mkdir -p ${SBDIR}/{patches,profile.d}
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
                 ${CWD}/apply-patches.sh ${CWD}/*.desktop.gz ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
                 ${SBDIR}/${NAME}.SlackBuild
  install -m0644 ${CWD}/patches/* \
                 ${SBDIR}/patches/
  mkdir -p ${SBDIR}/profile.d
  install -m0755 ${CWD}/profile.d/xfce.*  \
                 ${SBDIR}/profile.d/
  sed -i "/^VERSION=/s/:-.*}/:-$VERSION}/
          /^BUILD=/s/:-.*}/:-$BUILD}/
          /^  ARCH=/s/:-.*}/:-$ARCH}/
          " ${SBDIR}/${NAME}.SlackBuild
fi

# Build package:
set +o xtrace        # no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --prepend --linkadd y --chown n ${PKGDEST}/${PKGNAME}.tgz "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMPD} ]; then
    rm -rf ${TMPD} && echo "${TMPD} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
